{"version":3,"sources":["getWeb3.js","RegisterBusiness.js","RegisterFarmer.js","views/updateFarmer.js","views/updateBusiness.js","ipfs.js","login.component.js","reportWebVitals.js","history.js","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","components/Sidebar/Sidebar.js","contexts/BackgroundColorContext.js","views/farmerProfile.js","views/Dashboard.js","views/ContractInfoFarmer.js","Help.js","routes.js","layouts/Admin/Admin.js","assets/img/react-logo.png","views/BusinessInfo.js","views/ContractInfo.js","layouts/Admin/Admin1.js","views/Admin1Dashboard.js","views/FarmerInfo.js","routesAdmin1.js","views/BusinessDashboard.js","views/BusinessProfile.js","views/ContractInfoBusiness.js","layouts/Admin/Business.js","views/AddRequirement.js","views/ApproveRequest.js","routesbusiness.js","contexts/ThemeContext.js","components/ThemeWrapper/ThemeWrapper.js","components/BackgroundColorWrapper/BackgroundColorWrapper.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","_asyncToGenerator","_regeneratorRuntime","mark","_callee","web3","_web","provider","_web2","wrap","_context","prev","next","ethereum","Web3","enable","t0","console","log","providers","HttpProvider","stop","RegisterBusiness","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","componentDidMount","accounts","networkId","deployedNetwork","instance","location","hash","reload","sent","eth","getAccounts","net","getId","FarmContract","networks","Contract","abi","address","setState","FarmInstance","account","alert","error","addDoc","ipfs","add","state","buffer2","result","document","_callee2","pattern","_context2","setTimeout","RegExp","business_name","city","companyRegistrationNumber","GSTnumber","Number","length","email","test","methods","addBusiness","send","from","gas","then","response","history","push","updateBusinessName","event","target","value","updateCity","updateEmail","updateCompanyRegistrationNumber","updateGST","captureDoc","preventDefault","file2","files","reader2","FileReader","readAsArrayBuffer","onloadend","Buffer","undefined","GSTNumber","isVerified","bind","_assertThisInitialized","_createClass","key","this","_jsxs","className","children","_jsx","alt","src","style","color","FormGroup","FormControl","input","onChange","FormFile","id","Button","onClick","Spinner","animation","variant","Component","RegisterFarmer","land_document","name","age","aadharNumber","panNumber","addFarmer","updateName","updateAge","updateAadhar","updatePan","farmer","drizzleOptions","contracts","Farm","farmerTable","verification","updateBuyer","currentAddress","farmer_verify","not_verify","currentProvider","selectedAddress","isVerified1","isRejected","class","getFarmerDetails","Row","Col","md","Input","disabled","type","updateFarmer","_callee3","_context3","verified","_this2","DrizzleProvider","options","LoadingContainer","Card","CardHeader","CardBody","Form","CardFooter","business","businessTable","updateBusiness","Business_verify","getBusinessDetails","require","host","port","protocol","Login","Admin","isFarmer","isBusiness","isAdmin1","role","redirect","handleInputChange","href","margin","backgroundColor","borderRadius","textDecoration","fontWeight","letterSpacing","height","for","fontSize","padding","selected","submit","marginBottom","marginTop","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","AdminNavbar","_React$useState","React","useState","_React$useState2","_slicedToArray","collapseOpen","setcollapseOpen","_React$useState3","_React$useState4","modalSearch","setmodalSearch","_React$useState5","_React$useState6","setcolor","useEffect","updateColor","removeEventListener","innerWidth","toggleModalSearch","_Fragment","Navbar","classNames","expand","Container","fluid","toggled","sidebarOpened","NavbarToggler","toggleSidebar","NavbarBrand","e","brandText","Collapse","navbar","isOpen","Nav","Modal","modalClassName","toggle","ModalHeader","placeholder","Footer","ps","Date","getFullYear","backgroundColors","BackgroundColorContext","createContext","changeColor","Sidebar","useLocation","sidebarRef","useRef","navigator","platform","indexOf","PerfectScrollbar","current","suppressScrollX","suppressScrollY","destroy","routes","rtlActive","logo","logoImg","logoText","outterLink","rel","imgSrc","text","Link","to","innerLink","Consumer","data","ref","map","prop","routeName","path","pathname","pro","NavLink","layout","activeClassName","icon","rtlName","defaultProps","countBusiness","farmerProfile","concat","buyers","sellers","Dashboard","request","item","requestContract","loading","count","requested","row","_componentDidMount","registered","rowIndex","rowBusinessId","rowCropName","rowQuant","rowPricePerKg","rowDeliveryTime","rowTotalPrice","rowAdvPay","rowStatus","rowBusinessName","rowRequest","i","businessId","ind","getCropReqCount","parseInt","getFarmersCount","getCropRequirementBusiness","getCropRequirementCropName","t1","t2","getCropRequirementQuantity","t3","t4","getCropRequirementPrice","t5","t6","getCropRequirementDelTime","t7","t8","getCropRequirementTotalPrice","t9","t10","getCropRequirementAdvPayment","t11","t12","getCropRequirementStatus","t13","t14","isRequested","t15","t16","apply","arguments","_this$state","lg","CardTitle","tag","Table","responsive","xs","ContractInfoFarmer","farmerId","contractID","quantity","cropName","pricePerKg","deliveryTime","totalPrice","advPayment","remPayment","businessName","getContractsCount","getContractBusiness","getContractFarmer","toLowerCase","getContractId","getContractQuantity","getContractCropName","getContractPrice","getContractDeadLine","getContractTotalPrice","getContractAdvPayment","isComplete","LandInstance","flag","index","landDoc","title","rows","content","styles","bgColor","titleTextColor","rowTitleColor","rowContentPaddingBottom","transitionDuration","timingFunc","config","Help","allowfullscreen","Faq","component","BusinessCount","mainPanelRef","documentElement","setsidebarOpened","classList","remove","tables","querySelectorAll","scrollTop","scrollingElement","getBrandText","Fragment","Switch","Route","farmerarr","businessarr","reqsarr","Admin1Dashboard","ContractData","contract","method","BusinessMap","BusinessTable","BusinessInfo","verifyBusiness","verify","business_verify","getBusinessCount","getBusinesses","toString","businesses","not_verified","sclassName","FarmerInfo","verifyFarmer","farmersCount","farmersMap","getFarmers","farmers","ContractInfo","farmerName","Admin1","userarr","Redirect","BusinessDashboard","status","AddRequirement","crop_name","price_per_kg","quantity_in_kg","_total","_advPayment","addCropRequirement","updateState","stateLoc","updateCropName","updateQuantity","updatePrice","updateTotal","updateAdvanced","updateDelTime","ApproveRequest","approveRequest","farmer_Id","reqId","adv_Payment","val","signContract","rejectRequest","getRequirement","getFarmer","_callee4","_context4","_callee5","farmerDetails","_context5","requestMapping","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","t31","t32","t33","t34","t35","t36","t37","t38","t39","approved","BusinessProfile","ContractInfoBusiness","payRemain","amount","payRemaining","PaymentStatus","Business","themes","ThemeContext","theme","changeTheme","ThemeContextWrapper","_useState","_useState2","setTheme","body","Provider","BackgroundColorWrapper","setColor","ReactDOM","render","Router","exact","AdminLayout","_objectSpread","getElementById"],"mappings":"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","file":"static/js/main.8086bfbe.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\n\n/**\n * @returns {Web3}\n */\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from 'react';\r\nimport { Button, FormControl, FormFile, FormGroup, Spinner } from 'react-bootstrap';\r\nimport FarmContract from \"./artifacts/Farm.json\";\r\nimport getWeb3 from \"./getWeb3\";\r\nimport ipfs from './ipfs';\r\n\r\n//import Navigation from './Navigation'\r\n\r\nclass RegisterBusiness extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            FarmInstance: undefined,\r\n            account: null,\r\n            web3: null,\r\n            business_name: '',\r\n            city: '',\r\n            companyRegistrationNumber: '',\r\n            GSTNumber: '',\r\n            email: '',\r\n            isVerified: false,\r\n            buffer2: null,\r\n            document: '',\r\n        }\r\n        this.captureDoc = this.captureDoc.bind(this);\r\n        this.addDoc = this.addDoc.bind(this);\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n          //For refreshing page only once\r\n        if (!window.location.hash) {\r\n            window.location = window.location + '#loaded';\r\n            window.location.reload();\r\n        }\r\n\r\n        try {\r\n            //Get network provider and web3 instance\r\n            const web3 = await getWeb3();\r\n\r\n            const accounts = await web3.eth.getAccounts();\r\n\r\n            const networkId = await web3.eth.net.getId();\r\n            const deployedNetwork = FarmContract.networks[networkId];\r\n            const instance = new web3.eth.Contract(\r\n                FarmContract.abi,\r\n                deployedNetwork && deployedNetwork.address,\r\n            );\r\n\r\n            this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\r\n\r\n\r\n        } catch (error) {\r\n            // Catch any errors for any of the above operations.\r\n            alert(\r\n                `Failed to load web3, accounts, or contract. Check console for details.`,\r\n            );\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    addDoc = () => {\r\n        // alert('In add image')\r\n        // event.preventDefault()\r\n        ipfs.add(this.state.buffer2, (error, result) => {\r\n            console.log('Ipfs result', result)\r\n            if (error) {\r\n                // alert(error)\r\n                return\r\n            }\r\n            // alert(result[0].hash)\r\n            this.setState({ document: result[0].hash });\r\n            console.log('document:', result);\r\n        })\r\n    }\r\n\r\n    RegisterBusiness = async () => {\r\n        this.addDoc();\r\n        // alert('After add image')\r\n        await new Promise(resolve => setTimeout(resolve, 10000));\r\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n\r\n        if (this.state.business_name === '' || this.state.city === '' || this.state.companyRegistrationNumber === '' || this.state.GSTnumber === '') {\r\n            alert(\"All the fields are compulsory!\");\r\n        } else if (!Number(this.state.companyRegistrationNumber) || this.state.companyRegistrationNumber.length !== 12) {\r\n            alert(\"company Registration Number should be 12 digits long!\");\r\n        } else if (this.state.GSTnumber.length !==10) {\r\n            alert(\"GST Number should be a 10 digit unique number!\");\r\n        } else if (this.state.email === '' || !pattern.test(this.state.email)) {\r\n            alert('Please enter a valid email address\\n');\r\n        }\r\n        else {\r\n            await this.state.FarmInstance.methods.addBusiness(\r\n                this.state.business_name,\r\n                this.state.city,\r\n                this.state.companyRegistrationNumber,\r\n                this.state.GSTnumber,\r\n                this.state.document,\r\n                this.state.email,\r\n            )\r\n                .send({\r\n                    from: this.state.account,\r\n                    gas: 2100000\r\n                }).then(response => {\r\n                    this.props.history.push(\"/Business/BusinessDashboard\");\r\n                });\r\n\r\n            //Reload\r\n            window.location.reload(false);\r\n        }\r\n    }\r\n\r\n    updateBusinessName = event => (\r\n        this.setState({ business_name: event.target.value })\r\n    )\r\n\r\n    updateCity = event => (\r\n        this.setState({ city: event.target.value })\r\n    )\r\n    updateEmail = event => (\r\n        this.setState({ email: event.target.value })\r\n    )\r\n    updateCompanyRegistrationNumber = event => (\r\n        this.setState({ companyRegistrationNumber: event.target.value })\r\n    )\r\n    updateGST = event => (\r\n        this.setState({ GSTnumber: event.target.value })\r\n    )\r\n    captureDoc = (event) => {\r\n        event.preventDefault()\r\n        console.log(\"capturing the doc\")\r\n        const file2 = event.target.files[0]\r\n        const reader2 = new window.FileReader()\r\n        reader2.readAsArrayBuffer(file2)\r\n        reader2.onloadend = () => {\r\n            this.setState({ buffer2: Buffer(reader2.result) })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.web3) {\r\n            return (\r\n                <div className=\"bodyC\">\r\n\r\n                    <div className=\"img-wrapper\">\r\n                        <img alt=\"image2\" src=\"https://www.kultivate.in/images/contract.png\" className=\"logo\" />\r\n                        <div className=\"wine-text-container\">\r\n                            <div className=\"site-title wood-text\">Contract Farming</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"auth-wrapper\">\r\n                        <div className=\"auth-inner\">\r\n                            <div>\r\n                                <div>\r\n                                    <h1>\r\n                                        <Spinner animation=\"border\" variant=\"warning\" />\r\n                                    </h1>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"bodyC\">\r\n                <div className=\"img-wrapper\">\r\n                    <img alt = \"image1\" src=\"https://www.kultivate.in/images/contract.png\" className=\"logo\" />\r\n                    <div className=\"wine-text-container\">\r\n                        <div className=\"site-title wood-text\">AGRICON</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"auth-wrapper\">\r\n                    <div className=\"auth-inner\">\r\n                        <div className=\"App\">\r\n\r\n                            <div>\r\n                                <div>\r\n                                    <h1 style={{ color: \"black\" }}>\r\n                                        Business Registration\r\n                                    </h1>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"form\">\r\n\r\n                                <FormGroup>\r\n                                    <div className=\"form-label\">\r\n                                        Enter Business Name --\r\n                                    </div>\r\n                                    <div className=\"form-input\">\r\n                                        <FormControl\r\n                                            input='text'\r\n                                            value={this.state.business_name}\r\n                                            onChange={this.updateBusinessName}\r\n                                        />\r\n                                    </div>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup>\r\n                                    <div className=\"form-label\">\r\n                                        Enter City --\r\n                                    </div>\r\n                                    <div className=\"form-input\">\r\n                                        <FormControl\r\n                                            input='text'\r\n                                            value={this.state.city}\r\n                                            onChange={this.updateCity}\r\n                                        />\r\n                                    </div>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup>\r\n                                    <div className=\"form-label\">\r\n                                        Enter Company Registration Number --\r\n                                    </div>\r\n                                    <div className=\"form-input\">\r\n                                        <FormControl\r\n                                            input='text'\r\n                                            value={this.state.companyRegistrationNumber}\r\n                                            onChange={this.updateCompanyRegistrationNumber}\r\n                                        />\r\n                                    </div>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup>\r\n                                    <div className=\"form-label\">\r\n                                        Enter GST no --\r\n                                    </div>\r\n                                    <div className=\"form-input\">\r\n                                        <FormControl\r\n                                            input='text'\r\n                                            value={this.state.GSTnumber}\r\n                                            onChange={this.updateGST}\r\n                                        />\r\n                                    </div>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup>\r\n                                    <div className=\"form-label\">\r\n                                        Enter Email Address --\r\n                                    </div>\r\n                                    <div className=\"form-input\">\r\n                                        <FormControl\r\n                                            input='text'\r\n                                            value={this.state.email}\r\n                                            onChange={this.updateEmail}\r\n                                        />\r\n                                    </div>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup>\r\n                                    <label>Add Business License (PDF Format)</label>\r\n                                    <FormFile\r\n                                        id=\"File2\"\r\n                                        onChange={this.captureDoc}\r\n                                    />\r\n                                </FormGroup>\r\n\r\n                                <Button onClick={this.RegisterBusiness} className=\"button-vote\">\r\n                                    Register as Business\r\n                                </Button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default RegisterBusiness;","import React, { Component } from 'react'\r\nimport FarmContract from \"./artifacts/Farm.json\"\r\nimport getWeb3 from \"./getWeb3\"\r\nimport ipfs from './ipfs';\r\n\r\nimport { FormGroup, FormControl, Button, Spinner, FormFile } from 'react-bootstrap'\r\n\r\n//import Navigation from './Navigation'\r\n\r\nclass RegisterFarmer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            FarmInstance: undefined,\r\n            account: null,\r\n            web3: null,\r\n            name: '',\r\n            age: '',\r\n            city: '',\r\n            aadharNumber: '',\r\n            panNumber: '',\r\n            land_document: '',\r\n            isVerified: false,\r\n            buffer2: null,\r\n        }\r\n        this.captureDoc = this.captureDoc.bind(this);\r\n        this.addDoc = this.addDoc.bind(this);\r\n    }\r\n\r\n    addDoc = () => {\r\n        // alert('In add image')\r\n        // event.preventDefault()\r\n        ipfs.add(this.state.buffer2, (error, result) => {\r\n            console.log('Ipfs result', result)\r\n            if (error) {\r\n                // alert(error)\r\n                return\r\n            }\r\n            // alert(result[0].hash)\r\n            this.setState({ land_document: result[0].hash });\r\n            console.log('land_document:', result);\r\n        })\r\n    }\r\n    \r\n    captureDoc = (event) => {\r\n        event.preventDefault()\r\n        console.log(\"capturing the doc\")\r\n        const file2 = event.target.files[0]\r\n        const reader2 = new window.FileReader()\r\n        reader2.readAsArrayBuffer(file2)\r\n        reader2.onloadend = () => {\r\n            this.setState({ buffer2: Buffer(reader2.result) })\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        //For refreshing page only once\r\n        if (!window.location.hash) {\r\n            window.location = window.location + '#loaded';\r\n            window.location.reload();\r\n        }\r\n\r\n        try {\r\n            //Get network provider and web3 instance\r\n            const web3 = await getWeb3();\r\n\r\n            const accounts = await web3.eth.getAccounts();\r\n\r\n            const networkId = await web3.eth.net.getId();\r\n            const deployedNetwork = FarmContract.networks[networkId];\r\n            const instance = new web3.eth.Contract(\r\n                FarmContract.abi,\r\n                deployedNetwork && deployedNetwork.address,\r\n            );\r\n\r\n            this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\r\n\r\n\r\n        } catch (error) {\r\n            // Catch any errors for any of the above operations.\r\n            alert(\r\n                `Failed to load web3, accounts, or contract. Check console for details.`,\r\n            );\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    RegisterFarmer = async () => {\r\n        this.addDoc();\r\n        // alert('After add image')\r\n        await new Promise(resolve => setTimeout(resolve, 10000));\r\n        if (this.state.name === '' || this.state.age === '' || this.state.aadharNumber === '' || this.state.panNumber === '') {\r\n            alert(\"All the fields are compulsory!\");\r\n        } else if (!Number(this.state.aadharNumber) || this.state.aadharNumber.length !== 12) {\r\n            alert(\"Aadhar Number should be 12 digits long!\");\r\n        } else if (this.state.panNumber.length !== 10) {\r\n            alert(\"Pan Number should be a 10 digit unique number!\");\r\n        } else if (!Number(this.state.age) || this.state.age < 21) {\r\n            alert(\"Your age must be a number\");\r\n        } else {\r\n            await this.state.FarmInstance.methods.addFarmer(\r\n                this.state.name,\r\n                this.state.age,\r\n                this.state.city,\r\n                this.state.aadharNumber,\r\n                this.state.panNumber,\r\n                this.state.land_document)\r\n                .send({\r\n                    from: this.state.account,\r\n                    gas: 2100000\r\n                }).then(response => {\r\n                    this.props.history.push(\"/admin/Dashboard\");\r\n                });\r\n\r\n            //Reload\r\n            window.location.reload(false);\r\n        }\r\n    }\r\n\r\n    updateName = event => (\r\n        this.setState({ name: event.target.value })\r\n    )\r\n    updateAge = event => (\r\n        this.setState({ age: event.target.value })\r\n    )\r\n    updateCity = event => (\r\n        this.setState({ city: event.target.value })\r\n    )\r\n    updateAadhar = event => (\r\n        this.setState({ aadharNumber: event.target.value })\r\n    )\r\n    updatePan = event => (\r\n        this.setState({ panNumber: event.target.value })\r\n    )\r\n\r\n    \r\n\r\n    render() {\r\n        if (!this.state.web3) {\r\n            return (\r\n                <div>\r\n                    <div className=\"img-wrapper\">\r\n                        <img alt = \"image2\" src=\"https://www.kultivate.in/images/contract.png\" className=\"logo\" />\r\n                        <div className=\"wine-text-container\">\r\n                            <div className=\"site-title wood-text\">Contract Farming</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"auth-wrapper\">\r\n                        <div className=\"auth-inner\">\r\n                            <div>\r\n                                <div>\r\n                                    <h1>\r\n                                        <Spinner animation=\"border\" variant=\"warning\" />\r\n                                    </h1>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"bodyC\">\r\n\r\n                <div className=\"img-wrapper\">\r\n                    <img alt = \"image1\" src=\"https://www.kultivate.in/images/contract.png\" className=\"logo\" />\r\n                    <div className=\"wine-text-container\">\r\n                        <div className=\"site-title wood-text\">AGRICON </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"auth-wrapper\">\r\n                    <div className=\"auth-inner\">\r\n                        <div className=\"App\">\r\n\r\n                            <div>\r\n                                <div>\r\n                                    <h1 style={{ color: \"black\" }}>\r\n                                        Farmer Registration\r\n                                    </h1>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"form\">\r\n                                <FormGroup>\r\n                                    <div className=\"form-label\">\r\n                                        Enter Name --\r\n                                    </div>\r\n                                    <div className=\"form-input\">\r\n                                        <FormControl\r\n                                            input='text'\r\n                                            value={this.state.name}\r\n                                            onChange={this.updateName}\r\n                                        />\r\n                                    </div>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup>\r\n                                    <div className=\"form-label\">\r\n                                        Enter Age --\r\n                                    </div>\r\n                                    <div className=\"form-input\">\r\n                                        <FormControl\r\n                                            input='text'\r\n                                            value={this.state.age}\r\n                                            onChange={this.updateAge}\r\n                                        />\r\n                                    </div>\r\n                                </FormGroup>\r\n\r\n                                <div className=\"form\">\r\n                                    <FormGroup>\r\n                                        <div className=\"form-label\">\r\n                                            Enter city --\r\n                                        </div>\r\n                                        <div className=\"form-input\">\r\n                                            <FormControl\r\n                                                input='text'\r\n                                                value={this.state.city}\r\n                                                onChange={this.updateCity}\r\n                                            />\r\n                                        </div>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                        <div className=\"form-label\">\r\n                                            Enter Aadhar No --\r\n                                        </div>\r\n                                        <div className=\"form-input\">\r\n                                            <FormControl\r\n                                                input='text'\r\n                                                value={this.state.aadharNumber}\r\n                                                onChange={this.updateAadhar}\r\n                                            />\r\n                                        </div>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                        <div className=\"form-label\">\r\n                                            Enter Pan no --\r\n                                        </div>\r\n                                        <div className=\"form-input\">\r\n                                            <FormControl\r\n                                                input='text'\r\n                                                value={this.state.panNumber}\r\n                                                onChange={this.updatePan}\r\n                                            />\r\n                                        </div>\r\n                                    </FormGroup>\r\n\r\n\r\n                                    <FormGroup>\r\n                                        <label>Add your Land Document (PDF Format)</label>\r\n                                        <FormFile\r\n                                            id=\"File2\"\r\n                                            onChange={this.captureDoc}\r\n                                        />\r\n                                    </FormGroup>\r\n\r\n\r\n                                    <Button onClick={this.RegisterFarmer} className=\"button-vote\">\r\n                                        Register as Farmer\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default RegisterFarmer;","import {\n  LoadingContainer\n} from '@drizzle/react-components';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport {\n  Button,\n  Card, CardBody,\n  CardFooter, CardHeader, Col, Form, FormGroup, Input,\n  Row\n} from \"reactstrap\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Farm from \"../artifacts/Farm.json\";\nimport getWeb3 from \"../getWeb3\";\nimport \"../index.css\";\nimport ipfs from '../ipfs';\nimport { FormFile } from 'react-bootstrap'\n\n\nconst drizzleOptions = {\n  contracts: [Farm]\n}\n\nvar farmer;\nvar farmerTable = [];\nvar verification = [];\n\nclass updateBuyer extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      FarmInstance: undefined,\n      account: null,\n      web3: null,\n      address: '',\n      name: '',\n      age: '',\n      city: '',\n      aadharNumber: '',\n      panNumber: '',\n      land_document: '',\n      isVerified: false,\n      buffer2: null,\n      verified: '',\n    }\n    this.captureDoc = this.captureDoc.bind(this);\n    this.addDoc = this.addDoc.bind(this);\n  }\n\n  componentDidMount = async () => {\n    //For refreshing page only once\n    if (!window.location.hash) {\n      window.location = window.location + '#loaded';\n      window.location.reload();\n    }\n\n    try {\n      //Get network provider and web3 instance\n      const web3 = await getWeb3();\n\n      const accounts = await web3.eth.getAccounts();\n\n      const currentAddress = await web3.currentProvider.selectedAddress;\n      console.log(currentAddress);\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Farm.networks[networkId];\n      const instance = new web3.eth.Contract(\n        Farm.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\n      this.setState({ address: currentAddress });\n      var farmer_verify = await this.state.FarmInstance.methods.isVerified1(currentAddress).call();\n\n      var not_verify = await this.state.FarmInstance.methods.isRejected(currentAddress).call();\n      if (farmer_verify) {\n        verification.push(<p id=\"verified\">Verified <i class=\"fas fa-user-check\"></i></p>);\n      } else if (not_verify) {\n        verification.push(<p id=\"rejected\">Rejected <i class=\"fas fa-user-times\"></i></p>);\n      } else {\n        verification.push(<p id=\"unknown\">Not Yet Verified <i class=\"fas fa-user-cog\"></i></p>);\n      }\n\n      farmer = await this.state.FarmInstance.methods.getFarmerDetails(currentAddress).call();\n      console.log(farmer);\n      console.log(farmer[0]);\n      this.setState({ name: farmer[0], age: farmer[1], city: farmer[2], aadharNumber: farmer[3], panNumber: farmer[4], land_document : farmer[5] });\n      farmerTable.push(\n        <Row>\n          <Col md=\"12\">\n            <FormGroup>\n              <label>Your Wallet Address: </label>\n              <Input\n                disabled\n                type=\"text\"\n                value={currentAddress}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n      );\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  addDoc = async () => {\n    // alert('In add image')\n    await ipfs.files.add(this.state.buffer2, (error, result) => {\n        if (error) {\n            alert(error)\n            return\n        }\n\n        alert(result[0].hash)\n        this.setState({ land_document: result[0].hash });\n        console.log('land_document:', this.state.land_document);\n    })\n  }\n\n  captureDoc(event) {\n    event.preventDefault()\n    const file2 = event.target.files[0]\n    const reader2 = new window.FileReader()\n    reader2.readAsArrayBuffer(file2)\n    reader2.onloadend = () => {\n        this.setState({ buffer2: Buffer(reader2.result) })\n        console.log('buffer2', this.state.buffer2)\n    }\n    console.log('caoture doc...')\n  }\n\n  updateFarmer = async () => {\n    if (this.state.name === '' || this.state.age === '' || this.state.city === '' || this.state.email === '' || this.state.aadharNumber === '' || this.state.panNumber === '') {\n      alert(\"All the fields are compulsory!\");\n    } else if (this.state.aadharNumber.length !== 12) {\n      alert(\"Aadhar Number should be 12 digits long!\");\n    } else if (this.state.panNumber.length !== 10) {\n      alert(\"Pan Number should be a 10 digit unique number!\");\n    } else if (!Number(this.state.age)) {\n      alert(\"Your age must be a number\");\n    }\n    else {\n      await this.state.FarmInstance.methods.updateFarmer(\n        this.state.name,\n        this.state.age,\n        this.state.city,\n        this.state.aadharNumber,\n        this.state.panNumber,\n        this.state.land_document,\n      )\n        .send({\n          from: this.state.address,\n          gas: 2100000\n        }).then(response => {\n          this.props.history.push(\"/admin/farmerProfile\");\n        });\n\n      //Reload\n      window.location.reload(false);\n    }\n  }\n\n  updateName = event => (\n    this.setState({ name: event.target.value })\n  )\n  updateAge = event => (\n      this.setState({ age: event.target.value })\n  )\n  updateCity = event => (\n      this.setState({ city: event.target.value })\n  )\n  updateAadhar = event => (\n      this.setState({ aadharNumber: event.target.value })\n  )\n  updatePan = event => (\n      this.setState({ panNumber: event.target.value })\n  )\n\n  render() {\n    if (!this.state.web3) {\n      return (\n        <div>\n          <div>\n            <h1>\n              <Spinner animation=\"border\" variant=\"primary\" />\n            </h1>\n          </div>\n\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"content\">\n        <DrizzleProvider options={drizzleOptions}>\n          <LoadingContainer>\n            <Row>\n              <Col md=\"8\">\n                <Card>\n                  <CardHeader>\n                    <h5 className=\"title\">Farmer Profile</h5>\n                    <h5 className=\"title\">{verification}</h5>\n\n                  </CardHeader>\n                  <CardBody>\n                    <Form>\n                      {farmerTable}\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label>Name</label>\n                            <Input\n                              type=\"text\"\n                              value={this.state.name}\n                              onChange={this.updateName}\n                            />\n                          </FormGroup>\n                        </Col>\n\n                      </Row>\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label>Age</label>\n                            <Input\n                              type=\"text\"\n                              value={this.state.age}\n                              onChange={this.updateAge}\n                            />\n                          </FormGroup>\n                        </Col>\n\n                      </Row>\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label>City</label>\n                            <Input\n                              type=\"text\"\n                              value={this.state.city}\n                              onChange={this.updateCity}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label>Aadhar Number</label>\n                            <Input\n                              type=\"text\"\n                              value={this.state.aadharNumber}\n                              onChange={this.updateAadhar}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label>Pan Number</label>\n                            <Input\n                              type=\"text\"\n                              value={this.state.panNumber}\n                              onChange={this.updatePan}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col>\n                          <FormGroup>\n                                <label>Add your Land Document (PDF Format)</label>\n                                <FormFile\n                                    id=\"File2\"\n                                    onChange={this.captureDoc}\n                                />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                  <CardFooter>\n                    <Button onClick={this.updateFarmer} className=\"btn-fill\" color=\"primary\">\n                      Update\n                    </Button>\n                  </CardFooter>\n                </Card>\n              </Col>\n            </Row>\n          </LoadingContainer>\n        </DrizzleProvider>\n      </div>\n    );\n\n  }\n}\n\nexport default updateBuyer;","import {\n    LoadingContainer\n} from '@drizzle/react-components';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport {\n    Button,\n    Card, CardBody,\n    CardFooter, CardHeader, Col, Form, FormGroup, Input,\n    Row\n} from \"reactstrap\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Farm from \"../artifacts/Farm.json\";\nimport getWeb3 from \"../getWeb3\";\nimport '../index.css';\nimport ipfs from '../ipfs';\nimport { FormFile } from 'react-bootstrap'\n\n\nconst drizzleOptions = {\n    contracts: [Farm]\n}\n\n// var buyers = 0;\n// var sellers = 0;\nvar business;\nvar businessTable = [];\nvar verification = [];\n\nclass updateBusiness extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            FarmInstance: undefined,\n            account: null,\n            web3: null,\n            business_name: '',\n            city: '',\n            companyRegistrationNumber: '',\n            GSTnumber: '',\n            email: '',\n            isVerified: false,\n            buffer2: null,\n            document: '',\n        }\n        this.captureDoc = this.captureDoc.bind(this);\n        this.addDoc = this.addDoc.bind(this);\n    }\n\n    componentDidMount = async () => {\n        //For refreshing page only once\n        if (!window.location.hash) {\n            window.location = window.location + '#loaded';\n            window.location.reload();\n        }\n\n        try {\n            //Get network provider and web3 instance\n            const web3 = await getWeb3();\n\n            const accounts = await web3.eth.getAccounts();\n\n            const currentAddress = await web3.currentProvider.selectedAddress;\n            console.log(currentAddress);\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = Farm.networks[networkId];\n            const instance = new web3.eth.Contract(\n                Farm.abi,\n                deployedNetwork && deployedNetwork.address,\n            );\n\n            this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\n            this.setState({ address: currentAddress });\n            var Business_verify = await this.state.FarmInstance.methods.isVerified1(currentAddress).call();\n            console.log(Business_verify);\n\n            var not_verify = await this.state.FarmInstance.methods.isRejected(currentAddress).call();\n            console.log(not_verify);\n            if (Business_verify) {\n                verification.push(<p id=\"verified\">Verified <i class=\"fas fa-user-check\"></i></p>);\n            } else if (not_verify) {\n                verification.push(<p id=\"rejected\">Rejected <i class=\"fas fa-user-times\"></i></p>);\n            } else {\n                verification.push(<p id=\"unknown\">Not Yet Verified <i class=\"fas fa-user-cog\"></i></p>);\n            }\n\n            business = await this.state.FarmInstance.methods.getBusinessDetails(currentAddress).call();\n            console.log(business);\n            console.log(business[0]);\n            this.setState({ business_name: business[0], city: business[1], companyRegistrationNumber: business[2], GSTnumber: business[3], email: business[5], document:business[4]});\n            //sellerTable.push(<div><p>Name: {seller[0]}</p><p>Age: {seller[1]}</p><p>Aadhar Number: {seller[2]}</p><p>Pan Number: {seller[3]}</p><p>Owned Lands: {seller[4]}</p></div>);\n            businessTable.push(\n                <Row>\n                    <Col md=\"12\">\n                        <FormGroup>\n                            <label>Your Wallet Address: </label>\n                            <Input\n                                disabled\n                                type=\"text\"\n                                value={currentAddress}\n                            />\n                        </FormGroup>\n                    </Col>\n                </Row>\n            );\n\n        } catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n                `Failed to load web3, accounts, or contract. Check console for details.`,\n            );\n            console.error(error);\n        }\n    };\n\n    updateBusiness = async () => {\n        this.addDoc();\n        // alert('After add image')\n        await new Promise(resolve => setTimeout(resolve, 10000));\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n        if (this.state.business_name === '' || this.state.city === '' || this.state.companyRegistrationNumber === '' || this.state.GSTnumber === '') {\n            alert(\"All the fields are compulsory!\");\n        } else if (!Number(this.state.companyRegistrationNumber) || this.state.companyRegistrationNumber.length !== 12) {\n            alert(\"company Registration Number should be 12 digits long!\");\n        } else if (this.state.GSTnumber.length !== 10) {\n            alert(\"GST Number should be a 10 digit unique number!\");\n        } else if (this.state.email === '' || !pattern.test(this.state.email)) {\n            alert('Please enter a valid email address\\n');\n        }\n        else {\n            await this.state.FarmInstance.methods.updateBusiness(\n                this.state.business_name,\n                this.state.city,\n                this.state.companyRegistrationNumber,\n                this.state.GSTnumber,\n                this.state.document,\n                this.state.email,\n            )\n                .send({\n                    from: this.state.account,\n                    gas: 2100000\n                }).then(response => {\n                    this.props.history.push(\"/Business/BusinessDashboard\");\n                });\n\n            //Reload\n            window.location.reload(false);\n        }\n    }\n\n    addDoc = async () => {\n        // alert('In add image')\n        await ipfs.files.add(this.state.buffer2, (error, result) => {\n         if (error) {\n             alert(error)\n             return\n         }\n\n         //   alert(result[0].hash)\n            this.setState({ document: result[0].hash });\n            console.log('document:', this.state.document);\n        })\n     }\n\n     updateBusinessName = event => (\n        this.setState({ business_name: event.target.value })\n    )\n\n    updateCity = event => (\n        this.setState({ city: event.target.value })\n    )\n    updateEmail = event => (\n        this.setState({ email: event.target.value })\n    )\n    updateCompanyRegistrationNumber = event => (\n        this.setState({ companyRegistrationNumber: event.target.value })\n    )\n    updateGST = event => (\n        this.setState({ GSTnumber: event.target.value })\n    )\n    captureDoc(event) {\n        event.preventDefault()\n        const file2 = event.target.files[0]\n        const reader2 = new window.FileReader()\n        reader2.readAsArrayBuffer(file2)\n        reader2.onloadend = () => {\n            this.setState({ buffer2: Buffer(reader2.result) })\n            console.log('buffer2', this.state.buffer2)\n        }\n        console.log('capture doc...')\n    }\n\n    render() {\n        if (!this.state.web3) {\n            return (\n                <div>\n                    <div>\n                        <h1>\n                            <Spinner animation=\"border\" variant=\"primary\" />\n                        </h1>\n                    </div>\n\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"content\">\n                <DrizzleProvider options={drizzleOptions}>\n                    <LoadingContainer>\n                        <Row>\n                            <Col md=\"8\">\n                                <Card>\n                                    <CardHeader>\n                                        <h5 className=\"title\">Business Profile</h5>\n                                        <h5 className=\"title\">{verification}</h5>\n\n                                    </CardHeader>\n                                    <CardBody>\n                                        <Form>\n                                            {businessTable}\n                                            <Row>\n                                                <Col md=\"12\">\n                                                    <FormGroup>\n                                                        <label>Name</label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            value={this.state.business_name}\n                                                            onChange={this.updateBusinessName}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col md=\"12\">\n                                                    <FormGroup>\n                                                        <label>City</label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            value={this.state.city}\n                                                            onChange={this.updateCity}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col md=\"12\">\n                                                    <FormGroup>\n                                                        <label>Reg. No.</label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            value={this.state.companyRegistrationNumber}\n                                                            onChange={this.updateCompanyRegistrationNumber}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col md=\"12\">\n                                                    <FormGroup>\n                                                        <label>GST Number</label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            value={this.state.GSTnumber}\n                                                            onChange={this.updateGST}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col md=\"12\">\n                                                    <FormGroup>\n                                                        <label>Email</label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            value={this.state.email}\n                                                            onChange={this.updateEmail}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col md = \"12\">\n                                                    <FormGroup>\n                                                        <label>Add Business License (PDF Format)</label>\n                                                        <FormFile\n                                                            id=\"File2\"\n                                                            onChange={this.captureDoc}\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                        </Form>\n                                    </CardBody>\n                                    <CardFooter>\n                                        <Button onClick={this.updateBusiness} className=\"btn-fill\" color=\"primary\">\n                                            Update\n                                        </Button>\n                                    </CardFooter>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </LoadingContainer>\n                </DrizzleProvider>\n            </div>\n        );\n\n    }\n}\n\nexport default updateBusiness;","const IPFS = require('ipfs-http-client');\n\n//Use this for localhost\n// const ipfs = new IPFS({ host: 'localhost', port: 5001, protocol: 'http' });\n\n// Use this to use ipfs in network(Uncomment below line and comment above line \n// and also configure .ipfs/config file)\nconst ipfs = new IPFS({ host: '127.0.0.1', port: 5001, protocol: 'http' });\n\nexport default ipfs;","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport FarmContract from \"./artifacts/Farm.json\";\nimport getWeb3 from \"./getWeb3\";\nimport './index.css';\n\nexport default class Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            role: null,\n            redirect: null,\n            Admin: '',\n            farmer: '',\n            business: '',\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    componentDidMount = async () => {\n        if (!window.location.hash) {\n            window.location = window.location + '#loaded';\n            window.location.reload();\n        }\n\n        try {\n            //Get network provider and web3 instance\n            const web3 = await getWeb3();\n\n            const accounts = await web3.eth.getAccounts();\n\n            const networkId = await web3.eth.net.getId();\n            console.log(\"Network ID \", networkId)\n            const deployedNetwork = FarmContract.networks[networkId];\n\n            console.log(\"Deployed network address \", deployedNetwork)\n\n            const instance = new web3.eth.Contract(\n                FarmContract.abi,\n                deployedNetwork && deployedNetwork.address,\n            );\n\n            const currentAddress = await web3.currentProvider.selectedAddress;\n            console.log(\"Current address :- \", currentAddress);\n            this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\n            var farmer = await this.state.FarmInstance.methods.isFarmer(currentAddress).call();\n            console.log(farmer);\n            this.setState({ farmer: farmer });\n            var business = await this.state.FarmInstance.methods.isBusiness(currentAddress).call();\n            console.log(business);\n            this.setState({ business: business });\n            var Admin = await this.state.FarmInstance.methods.isAdmin1(currentAddress).call();\n            console.log(Admin);\n            this.setState({ Admin: Admin });\n\n        } catch (error) {\n            alert(\n                'Failed to load web3, accounts, or contract. Check console for details.',\n            );\n            console.error(error);\n        }\n    };\n\n    handleInputChange(event) {\n        this.setState({\n            role: event.target.value,\n            redirect: \"/Register\" + event.target.value\n        });\n    }\n    submit() {\n        this.props.history.push(this.state.redirect);\n        window.location.reload(false);\n\n    }\n\n    render() {\n        if (this.state.farmer || this.state.business || this.state.Admin) {\n            return (\n\n                <div className=\"bodyC\">\n                    <div className=\"img-wrapper\">\n                        <img alt='image1' src=\"https://www.kultivate.in/images/contract.png\" className=\"logo\" />\n                        <div className=\"wine-text-container\">\n                            <div className=\"site-title wood-text\">Agricon</div>\n                        </div>\n                    </div>\n                    <div className=\"auth-wrapper\">\n                        <div className=\"auth-inner\">\n                            <h1>You are already registered.</h1>\n                            <Button href=\"/admin/Dashboard\" disabled={!this.state.farmer} className=\"btn-block\" style={{ margin: \"2px\", backgroundColor: \"#74B72E\" }} >Farmer Dashboard</Button>\n                            <br /><Button href=\"/Business/BusinessDashboard\" disabled={!this.state.business} className=\"btn-block\" style={{ margin: \"2px\", backgroundColor: \"#74B72E\" }}>Business Dashboard</Button>\n                            <br /><Button href=\"/Admin1/Admin1Dashboard\" disabled={!this.state.Admin} className=\"btn-block\" style={{ margin: \"2px\", backgroundColor: \"#74B72E\" }}>Admin Dashboard</Button>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"bodyC\">\n                <a href=\"/Help\" className=\"faq\" style={{ borderRadius: \"10%\", textDecoration: \"none\", fontWeight: \"bolder\" }} >\n                    <h3 style={{ color: \"wheat\" }}>Help?</h3>\n                </a>\n                <div className=\"img-wrapper\">\n                    <img alt = \"image2\" src=\"https://www.kultivate.in/images/contract.png\" className=\"logo\" />\n                    <div className=\"wine-text-container\">\n                        <div className=\"site-title wood-text\">AGRICON</div>\n                    </div>\n                </div>\n                <div className=\"auth-wrapper\">\n                    <div className=\"auth-inner\">\n                        <div>\n                            <h1 style={{ letterSpacing: \"3px\", fontWeight: 500, color: \"black\" }}>Welcome !</h1>\n                            <h4 style={{ letterSpacing: \"2px\", color: 'black' }}>Blockchain Based Complete Platform for Contract Farming !</h4>\n                            <hr\n                                style={{\n                                    color: \"#696969\",\n                                    height: 1\n                                }}\n                            />\n\n                            <div class=\"form-group\" style={{ color: \"black\" }}>\n                                <label class=\"control-label\" for=\"Company\" style={{ fontSize: \"18px\", padding: \"2px\" }}>Select Role</label>\n                                <select id=\"Company\" class=\"form-control\" name=\"Company\" onChange={this.handleInputChange}>\n                                    <option selected=\"true\" disabled=\"disabled\">Select Role</option>\n                                    <option value=\"Business\">Business</option>\n                                    <option value=\"Farmer\">Farmer</option>\n                                </select>\n                            </div>\n\n                            <div>\n                                <button onClick={() => this.submit()} className=\"btn btn-primary btn-block\" style={{ marginBottom: \"10px\", marginTop: \"10px\" }}>Register</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  // Button,\n  Collapse,\n  // DropdownToggle,\n  // DropdownMenu,\n  // DropdownItem,\n  // UncontrolledDropdown,\n  Input,\n  // InputGroup,\n  NavbarBrand,\n  Navbar,\n  // NavLink,\n  Nav,\n  Container,\n  Modal,\n  NavbarToggler,\n  ModalHeader,\n} from \"reactstrap\";\n\nfunction AdminNavbar(props) {\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\n  const [modalSearch, setmodalSearch] = React.useState(false);\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  });\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  const toggleCollapse = () => {\n    if (collapseOpen) {\n      setcolor(\"navbar-transparent\");\n    } else {\n      setcolor(\"bg-white\");\n    }\n    setcollapseOpen(!collapseOpen);\n  };\n  // this function is to open the Search modal\n  const toggleModalSearch = () => {\n    setmodalSearch(!modalSearch);\n  };\n  return (\n    <>\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div\n              className={classNames(\"navbar-toggle d-inline\", {\n                toggled: props.sidebarOpened,\n              })}\n            >\n              <NavbarToggler onClick={props.toggleSidebar}>\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </NavbarToggler>\n            </div>\n            <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n              {props.brandText}\n            </NavbarBrand>\n          </div>\n          <NavbarToggler onClick={toggleCollapse}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n            <a href =\"/Help\" className=\"faq\" style={{borderRadius: \"10%\", textDecoration: \"none\", fontWeight: \"bolder\"}} >\n                 <h3 style={{color: \"black\"}}>Help?</h3>\n              </a>\n              \n              \n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n      <Modal\n        modalClassName=\"modal-search\"\n        isOpen={modalSearch}\n        toggle={toggleModalSearch}\n      >\n        <ModalHeader>\n          <Input placeholder=\"SEARCH\" type=\"text\" />\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            onClick={toggleModalSearch}\n          >\n            <i className=\"tim-icons icon-simple-remove\" />\n          </button>\n        </ModalHeader>\n      </Modal>\n    </>\n  );\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container, Nav, NavItem, NavLink } from \"reactstrap\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <Container fluid>\n        {/* <Nav>\n          <NavItem>\n            <NavLink href=\"https://www.creative-tim.com/?ref=bdr-user-archive-footer\">\n              Land Registry\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink href=\"https://www.creative-tim.com/presentation?ref=bdr-user-archive-footer\">\n              About Us\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink href=\"https://www.creative-tim.com/blog?ref=bdr-user-archive-footer\">\n              Blog\n            </NavLink>\n          </NavItem>\n        </Nav> */}\n        <div className=\"copyright\">\n          © {new Date().getFullYear()} made with{\" \"}\n          <i className=\"tim-icons icon-heart-2\" /> for{\" \"}\n          <a\n            href=\"https://www.creative-tim.com/?ref=bdr-user-archive-footer\"\n            target=\"_blank\"\n          >\n            AGRICON\n          </a>{\" \"}\n          </div>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav } from \"reactstrap\";\nimport {\n  BackgroundColorContext,\n  // backgroundColors,\n} from \"../../contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Sidebar(props) {\n  const location = useLocation();\n  const sidebarRef = React.useRef(null);\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(sidebarRef.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    };\n  });\n  // const linkOnClick = () => {\n  //   document.documentElement.classList.remove(\"nav-open\");\n  // };\n  const { routes, rtlActive, logo } = props;\n  let logoImg = null;\n  let logoText = null;\n  if (logo !== undefined) {\n    if (logo.outterLink !== undefined) {\n      logoImg = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-mini\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </a>\n      );\n      logoText = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-normal\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </a>\n      );\n    } else {\n      logoImg = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-mini\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </Link>\n      );\n      logoText = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-normal\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </Link>\n      );\n    }\n  }\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <div className=\"sidebar\" data={color}>\n          <div className=\"sidebar-wrapper\" ref={sidebarRef}>\n            {logoImg !== null || logoText !== null ? (\n              <div className=\"logo\">\n                \n              </div>\n            ) : null}\n            <Nav>\n              {routes.map((prop, key) => {\n                if (prop.redirect) return null;\n                return (\n                  <li\n                    className={\n                      activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\")\n                    }\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.layout + prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                      onClick={props.toggleSidebar}\n                    >\n                      <i className={prop.icon} />\n                      <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                    </NavLink>\n                  </li>\n                );\n              })}\n            \n            </Nav>\n          </div>\n        </div>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string,\n  }),\n};\n\nexport default Sidebar;\n","import { createContext } from \"react\";\n\nexport const backgroundColors = {\n  primary: \"primary\",\n  blue: \"blue\",\n  green: \"green\",\n};\n\nexport const BackgroundColorContext = createContext({\n  color: backgroundColors.blue,\n  changeColor: (color) => {},\n});\n","import {\n  LoadingContainer\n} from '@drizzle/react-components';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport {\n  Button,\n  Card, CardBody,\n  CardFooter, CardHeader, Col, Form, FormGroup, Input,\n  Row\n} from \"reactstrap\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Farm from \"../artifacts/Farm.json\";\nimport getWeb3 from \"../getWeb3\";\nimport \"../index.css\";\n\n\nconst drizzleOptions = {\n  contracts: [Farm]\n}\n\nvar farmer;\nvar farmerTable = [];\nvar verification = [];\n\nclass farmerProfile extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      FarmInstance: undefined,\n      account: null,\n      web3: null,\n      buyers: 0,\n      sellers: 0,\n      verified: '',\n      farmerTable : []\n    }\n  }\n\n  componentDidMount = async () => {\n    //For refreshing page only once\n    if (!window.location.hash) {\n      window.location = window.location + '#loaded';\n      window.location.reload();\n    }\n\n    try {\n      //Get network provider and web3 instance\n      const web3 = await getWeb3();\n\n      const accounts = await web3.eth.getAccounts();\n\n      const currentAddress = await web3.currentProvider.selectedAddress;\n      console.log(currentAddress);\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Farm.networks[networkId];\n      const instance = new web3.eth.Contract(\n        Farm.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\n\n      var farmer_verify = await this.state.FarmInstance.methods.isVerified1(currentAddress).call();\n      this.setState({ verified: farmer_verify });\n      var not_verify = await this.state.FarmInstance.methods.isRejected(currentAddress).call();\n      if (farmer_verify) {\n        verification.push(<p id=\"verified\">Verified <i class=\"fas fa-user-check\"></i></p>);\n      } else if (not_verify) {\n        verification.push(<p id=\"rejected\">Rejected <i class=\"fas fa-user-times\"></i></p>);\n      } else {\n        verification.push(<p id=\"unknown\">Not Yet Verified <i class=\"fas fa-user-cog\"></i></p>);\n      }\n\n      farmer = await this.state.FarmInstance.methods.getFarmerDetails(currentAddress).call();\n      // console.log(buyer);\n      // console.log(buyer[0]);\n\n      farmerTable.push(<>\n        <Row>\n          <Col md=\"12\">\n            <FormGroup>\n              <label>Your Wallet Address: </label>\n              <Input\n                disabled\n                type=\"text\"\n                value={currentAddress}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <FormGroup>\n              <label>Name</label>\n              <Input\n                disabled\n                type=\"text\"\n                value={farmer[0]}\n              />\n            </FormGroup>\n          </Col>\n\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <FormGroup>\n              <label>Age</label>\n              <Input\n                disabled\n                type=\"text\"\n                value={farmer[1]}\n              />\n            </FormGroup>\n          </Col>\n\n        </Row>\n        {/* <Row>\n          <Col md=\"12\">\n            <FormGroup>\n              <label>Email Address </label>\n              <Input\n                disabled\n                type=\"text\"\n                value={buyer[4]}\n              />\n            </FormGroup>\n          </Col>\n        </Row> */}\n        <Row>\n          <Col md=\"12\">\n            <FormGroup>\n              <label>City</label>\n              <Input\n                disabled\n                type=\"text\"\n                value={farmer[2]}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <FormGroup>\n              <label>Aadhar Number</label>\n              <Input\n                disabled\n                type=\"text\"\n                value={farmer[3]}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <FormGroup>\n              <label>Pan Number</label>\n              <Input\n                disabled\n                type=\"text\"\n                value={farmer[4]}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <FormGroup>\n              <label>Your Land Document</label>\n              {/* <div class=\"post-meta\"><span class=\"timestamp\"> <a href={`https://ipfs.io/ipfs/${farmer[5]}`} target=\"_blank\" rel=\"noreferrer\">Here</a></span></div> */}\n              <div class=\"post-meta\"><span class=\"timestamp\"> <a href={`http://127.0.0.1:8080/ipfs/${farmer[5]}`} target=\"_blank\" rel=\"noreferrer\">Here</a></span></div>\n                                                                                   {/* ^ */}\n                                                                                   {/* | */}\n                                                                    {/* here you have to put host address for your ipfs server */}\n            </FormGroup>\n          </Col>\n        </Row>\n      </>);\n      this.setState({farmerTable : farmerTable});\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return (\n        <div>\n          <div>\n            <h1>\n              <Spinner animation=\"border\" variant=\"primary\" />\n            </h1>\n          </div>\n\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"content\">\n        <DrizzleProvider options={drizzleOptions}>\n          <LoadingContainer>\n            <Row>\n              <Col md=\"8\">\n                <Card>\n                  <CardHeader>\n                    <h5 className=\"title\">Farmer Profile</h5>\n                    <h5 className=\"title\">{verification}</h5>\n                  </CardHeader>\n                  <CardBody>\n                    <Form>\n                      {this.state.farmerTable}\n                    </Form>\n                    <Button href=\"/admin/updateFarmer\" className=\"btn-fill\" disabled={!this.state.verified} color=\"primary\">\n                      Edit Profile\n                    </Button>\n                  </CardBody>\n                  <CardFooter>\n\n                  </CardFooter>\n                </Card>\n              </Col>\n            </Row>\n          </LoadingContainer>\n        </DrizzleProvider>\n      </div>\n    );\n\n  }\n}\n\nexport default farmerProfile;","import {\n  LoadingContainer\n} from '@drizzle/react-components';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport React, { Component } from \"react\";\nimport { Spinner } from 'react-bootstrap';\n// reactstrap components\nimport {\n  Button, Card, CardBody, CardHeader, CardTitle, Col, Row, Table\n} from \"reactstrap\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Farm from \"../artifacts/Farm.json\";\nimport \"../card.css\";\nimport getWeb3 from \"../getWeb3\";\n\n\nconst drizzleOptions = {\n  contracts: [Farm]\n}\n\nvar countBusiness;\n\nclass Dashboard extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Initialize loading state\n      loading: true,\n      FarmInstance: undefined,\n      account: null,\n      web3: null,\n      count: 0,\n      requested: false,\n      row: [], // Initialize row as empty array\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Farm.networks[networkId];\n      const instance = new web3.eth.Contract(\n        Farm.abi,\n        deployedNetwork && deployedNetwork.address\n      );\n\n      this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\n\n      const currentAddress = await web3.currentProvider.selectedAddress;\n      var registered = await this.state.FarmInstance.methods.isFarmer(currentAddress).call();\n      this.setState({ registered: registered });\n\n      var count = await this.state.FarmInstance.methods.getCropReqCount().call();\n      count = parseInt(count);\n      this.setState({ count: count });\n\n      countBusiness = await this.state.FarmInstance.methods.getFarmersCount().call();\n\n      var rowIndex = [];\n      var rowBusinessId = [];\n      var rowCropName = [];\n      var rowQuant = [];\n      var rowPricePerKg = [];\n      var rowDeliveryTime = [];\n      var rowTotalPrice = [];\n      var rowAdvPay = [];\n      var rowStatus = [];\n      var rowBusinessName = [];\n      var rowRequest = [];\n\n      for (var i = 0; i < count; i++) {\n        rowIndex.push(i);\n        const businessId = await this.state.FarmInstance.methods.getCropRequirementBusiness(i).call();\n        rowBusinessId.push(businessId);\n        var business = await this.state.FarmInstance.methods.getBusinessDetails(businessId).call();\n        rowBusinessName.push(business[0]);\n        rowCropName.push(await this.state.FarmInstance.methods.getCropRequirementCropName(i).call());\n        rowQuant.push(await this.state.FarmInstance.methods.getCropRequirementQuantity(i).call());\n        rowPricePerKg.push(await this.state.FarmInstance.methods.getCropRequirementPrice(i).call());\n        rowDeliveryTime.push(await this.state.FarmInstance.methods.getCropRequirementDelTime(i).call());\n        rowTotalPrice.push(await this.state.FarmInstance.methods.getCropRequirementTotalPrice(i).call());\n        rowAdvPay.push(await this.state.FarmInstance.methods.getCropRequirementAdvPayment(i).call());\n        rowStatus.push(await this.state.FarmInstance.methods.getCropRequirementStatus(i).call());\n        rowRequest.push(await this.state.FarmInstance.methods.isRequested(i).call());\n        // console.log(rowRequest[i]);\n      }\n\n      var ind = 0;\n      var row = [];\n      for (i = 0; i < count; i++) {\n        ind++;\n        // console.log(rowStatus[i]);\n        if (!rowStatus[i]) {\n          row.push(\n            <tr key={i}>\n              <td>{ind}</td>\n              <td>{rowBusinessName[i]}</td>\n              <td>{rowCropName[i]}</td>\n              <td>{rowQuant[i]}</td>\n              <td>{rowPricePerKg[i]}</td>\n              <td>{rowDeliveryTime[i]}</td>\n              <td>{rowTotalPrice[i]}</td>\n              <td>{rowAdvPay[i]}</td>\n              <td>\n                <Button onClick={this.request(i)} disabled={rowRequest[i]} className=\"btn btn-danger\">\n                  Request\n                </Button>\n              </td>\n            </tr>\n          );\n        }\n        // console.log(rowRequest[i]);\n      }\n\n      this.setState({ row: row, loading: false }); // Update row and loading state\n\n    } catch (error) {\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  }\n\n  request = (item) => async () => {\n    await this.state.FarmInstance.methods.requestContract(\n      item\n    ).send({\n      from: this.state.account,\n      gas: 2100000\n    });\n\n    window.location.reload(false);\n  }\n  // Remaining code...\n\n  render() {\n    // Destructure state variables\n    const { loading, web3, registered, row } = this.state;\n\n    // Handle loading state\n    if (loading || !web3) {\n      return (\n        <div>\n          <div>\n            <h1>\n              <Spinner animation=\"border\" variant=\"primary\" />\n            </h1>\n          </div>\n        </div>\n      );\n    }\n\n    // Handle unregistered state\n    if (!registered) {\n      return (\n        <div className=\"content\">\n          <div>\n            <Row>\n              <Col xs=\"6\">\n                <Card className=\"card-chart\">\n                  <CardBody>\n                    <h1>\n                      You are not verified to view this page\n                    </h1>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      );\n    }\n\n    // Render the dashboard once data is loaded\n    return (\n      <>\n        <div className=\"content\">\n          {/* Render dashboard content here */}\n          <DrizzleProvider options={drizzleOptions}>\n            <LoadingContainer>\n              <div className=\"main-section\">\n                <Row>\n                  <Col lg=\"4\">\n                    <div class=\"dashbord dashbord-skyblue\">\n                      <div class=\"icon-section\">\n                        <i class=\"fa fa-users\" aria-hidden=\"true\"></i><br />\n                        <medium>Total Business</medium><br />\n                        <p> {countBusiness} </p>\n                      </div>\n                      <div class=\"detail-section\"><br />\n                      </div>\n                    </div>\n                  </Col>\n                  <Col lg=\"4\">\n                    <div class=\"dashbord dashbord-orange\">\n                      <div class=\"icon-section\">\n                        <i class=\"fa fa-landmark\" aria-hidden=\"true\"></i><br />\n                        <medium>Registered Crop Requirement Count</medium><br />\n                        <p>{row.length}</p>\n                      </div>\n                      <div class=\"detail-section\"><br />\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </div>\n            </LoadingContainer>\n          </DrizzleProvider>\n          <Row>\n            <Col lg=\"4\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Profile</h5>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Button href=\"/admin/farmerProfile\" className=\"btn-fill\" color=\"primary\">\n                      View Profile\n                    </Button>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"4\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Signed Contracts</h5>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Button href=\"/admin/ContractInfoFarmer\" className=\"btn-fill\" color=\"primary\">\n                      View Your Signed Contracts\n                    </Button>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          {/* For example, render the table with fetched data */}\n          <Row>\n            <Col lg=\"12\" md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">New Crop Requirements</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Table className=\"tablesorter\" responsive color=\"black\">\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th>#</th>\n                        <th>Business</th>\n                        <th>Crop name</th>\n                        <th>Quantity(kg)</th>\n                        <th>Price(kg)</th>\n                        <th>Delivery Time</th>\n                        <th>Total Price</th>\n                        <th>Advanced Payment</th>\n                        <th>Request Contract</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {/* Render the populated rows */}\n                      {row}\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\nexport default Dashboard;","import {\n  LoadingContainer\n} from '@drizzle/react-components';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n// reactstrap components\nimport {\n  Card, CardBody, CardHeader, CardTitle, Col, Row, Table\n} from \"reactstrap\";\nimport Farm from \"../artifacts/Farm.json\";\nimport getWeb3 from \"../getWeb3\";\n\n\n\n\nconst drizzleOptions = {\n  contracts: [Farm]\n}\n\n\nvar verified;\n// var row = [];\n\n\nclass ContractInfoFarmer extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      LandInstance: undefined,\n      account: null,\n      web3: null,\n      flag: null,\n      verified: '',\n      registered: '',\n      count: 0,\n      id: '',\n      row: []\n    }\n  }\n\n  // viewImage = (landId) => {\n  //   alert(landId);\n  //   this.props.history.push({\n  //     pathname: '/viewImage',\n  //   })\n  // }\n\n  componentDidMount = async () => {\n    //For refreshing page only once\n    if (!window.location.hash) {\n      window.location = window.location + '#loaded';\n      window.location.reload();\n    }\n\n    try {\n      //Get network provider and web3 instance\n      const web3 = await getWeb3();\n\n      const accounts = await web3.eth.getAccounts();\n\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Farm.networks[networkId];\n      const instance = new web3.eth.Contract(\n        Farm.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      const currentAddress = await web3.currentProvider.selectedAddress;\n      console.log(currentAddress);\n      this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\n      verified = await this.state.FarmInstance.methods.isVerified1(currentAddress).call();\n      console.log(verified);\n      this.setState({ verified: verified });\n      var registered = await this.state.FarmInstance.methods.isFarmer(currentAddress).call();\n      console.log(registered);\n      this.setState({ registered: registered });\n\n      var count = await this.state.FarmInstance.methods.getContractsCount().call();\n      count = parseInt(count);\n      console.log(typeof (count));\n      console.log(count);\n      this.setState({count:count});\n\n      const row = [];\n      for (let i = 0; i < count; i++) {\n        const businessId = await this.state.FarmInstance.methods.getContractBusiness(i).call();\n        const farmerId = await this.state.FarmInstance.methods.getContractFarmer(i).call();\n        let business = await this.state.FarmInstance.methods.getBusinessDetails(businessId).call();\n        if (farmerId.toLowerCase() === currentAddress.toLowerCase()) {\n          const contractID = await this.state.FarmInstance.methods.getContractId(i).call();\n          const quantity = await this.state.FarmInstance.methods.getContractQuantity(i).call();\n          const cropName = await this.state.FarmInstance.methods.getContractCropName(i).call();\n          const pricePerKg = await this.state.FarmInstance.methods.getContractPrice(i).call();\n          const deliveryTime = await this.state.FarmInstance.methods.getContractDeadLine(i).call();\n          const totalPrice = await this.state.FarmInstance.methods.getContractTotalPrice(i).call();\n          const advPayment = await this.state.FarmInstance.methods.getContractAdvPayment(i).call();\n          const remPayment = await this.state.FarmInstance.methods.isComplete(i).call();\n          const businessName = business[0];\n          // const farmerAge = farmer[1];\n          // const farmerCity = farmer[2];\n          // const farmerAdhar = farmer[3];\n          // const farmerPan = farmer[4];\n          row.push({ contractID,  businessId, cropName, quantity, businessName,\n             pricePerKg, deliveryTime, totalPrice, advPayment, remPayment });\n            //  farmerAge, farmerCity, farmerAdhar, farmerPan, \n        }\n      }\n      this.setState({ row: row });\n      console.log(row)\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return (\n        <div>\n          <div>\n            <h1>\n              <Spinner animation=\"border\" variant=\"primary\" />\n            </h1>\n          </div>\n\n        </div>\n      );\n    }\n\n    if (!this.state.registered) {\n      return (\n        <div className=\"content\">\n          <div>\n            <Row>\n              <Col xs=\"6\">\n                <Card className=\"card-chart\">\n                  <CardBody>\n                    <h1>\n                      You are not verified to view this page\n                    </h1>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n\n        </div>\n      );\n    }\n\n\n    return (\n      <>\n        <div className=\"content\">\n          <DrizzleProvider options={drizzleOptions}>\n            <LoadingContainer>\n              <Row>\n                <Col lg=\"12\" md=\"12\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle tag=\"h4\">My Contracts\n                      </CardTitle>\n                    </CardHeader>\n                    <CardBody>\n                      <Table className=\"tablesorter\" responsive color=\"black\">\n                      <thead className=\"text-primary\">\n                          <tr>\n                            <th>#</th>\n                            <th>Business ID</th>\n                            <th>Business Name</th>\n                            <th>Crop name</th>\n                            <th>Land Doc</th>\n                            <th>Quantity(kg)</th>\n                            <th>Price(kg)</th>\n                            <th>Delivery Time</th>\n                            <th>Total Price</th>\n                            <th>Advanced Payment</th>\n                            <th>Remaining Payment status</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.state.row.map((item, index) => (\n                            <tr key={index}>\n                              <td>{index + 1}</td>\n                              <td>{item.businessId}</td>\n                              <td>{item.businessName}</td>\n                              <td>{item.cropName}</td>\n                              {/* <td><a href={`http://10.4.0.94:8080/ipfs/${item.landDoc}`} target=\"_blank\" rel=\"noreferrer\">Click Here</a></td> */}\n                              <td><a href={`https://ipfs.io/ipfs/${item.landDoc}`} target=\"_blank\" rel=\"noreferrer\">Click Here</a></td>\n                              <td>{item.quantity}</td>\n                              <td>{item.pricePerKg}</td>\n                              <td>{item.deliveryTime}</td>\n                              <td>{item.totalPrice}</td>\n                              <td>{(item.advPayment) ? \"Paid\" : \"Pending\"}</td>\n                              <td>{(item.remPayment) ? \"Paid\" : \"Pending\"}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </LoadingContainer>\n          </DrizzleProvider>\n        </div>\n      </>\n\n    );\n\n  }\n}\n\nexport default ContractInfoFarmer;","import React from \"react\";\nimport Faq from \"react-faq-component\";\nimport \"../node_modules/video-react/dist/video-react.css\";\nimport './help.css';\nimport './index.css';\n// import video from \"../src/assets/img/video.mkv\";\n\nconst data = {\n    title: \"FAQ (How the System works)\",\n    rows: [\n        {\n            title: \"What are the prerequisites for using the system?\",\n            content: \"You need Metamask Browser Extension added and Ganache for running the system on a local Ethereum Blockchain.\",\n        },\n        {\n            title: \"How can I understand the working of the system?\",\n            content:\n                \"You can watch the demo video uploaded above on this page.\",\n        },\n        {\n            title: \"Where can I find this project source code?\",\n            content: <p>You can find it in this Github Repository <a href=\"https://github.com/Ashwing43/Agricon\" target=\"_blank\" rel=\"noreferrer\">here.</a></p>,\n        },\n        {\n            title: \"What do I register for?\",\n            content: \"If you are a agro related business and you require certain food crops frequently, Register as a Business and if you have the agricultural production and you want to sell it , Register as a Farmer.\",\n        },\n        {\n            title: \"Why can't I request to company for fullfilling their requirement?\",\n            content: \"Your account profile and documents will first be verified by the Admin and then you can send the request.\",\n        },\n        {\n            title: \"Why can't I add a crop requirement after registering as business?\",\n            content: \"Same answer as above!\",\n        },\n        {\n            title: \"Who has created this project?\",\n            content: \"This is a team project built by Pankaj More, Ashwin Gadve, Dheeraj Nale and Tejas Date. You can reach out to us in case of any queries!\",\n        },\n    ],\n};\n\nconst styles = {\n    bgColor: 'dark',\n    titleTextColor: \"black\",\n    rowTitleColor: \"grey\",\n    rowContentPaddingBottom: '10px',\n    transitionDuration: \"0.5s\",\n    timingFunc: \"ease\",\n    //rowContentColor: 'grey',\n    //arrowColor: \"black\",\n};\n\nconst config = {\n    // animate: true,\n    // arrowIcon: \"V\",\n    // tabFocus: true\n};\n\nexport default function Help() {\n    return (\n        <>\n            <div id=\"container\" >\n                <div id=\"topSection\">\n                    <div id=\"searchSection\">\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"container\">\n                <h1>Demo</h1>\n                <div className=\"embed-responsive embed-responsive-16by9\">\n                    <iframe title=\"iframe1\" className=\"embed-responsive-item\" src=\"https://www.youtube.com/\" allowfullscreen=\"true\"></iframe>\n                </div>\n\n                <div style={{ marginTop: \"10px\" }}>\n                    <Faq\n                        data={data}\n                        styles={styles}\n                        config={config}\n                    />\n                </div>\n            </div>\n        </>\n    );\n}","import farmerProfile from \"./views/farmerProfile\";\nimport Dashboard from \"./views/Dashboard\";\nimport ContractInfoFarmer from \"./views/ContractInfoFarmer\";\n// import MakePayment from \"./views/MakePayment\";\nimport updateFarmer from \"./views/updateFarmer\";\nimport Help from \"./Help\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Farmer Dashboard\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/farmerProfile\",\n    name: \"Farmer Profile\",\n    rtlName: \"الرموز\",\n    icon: \"tim-icons icon-single-02\",\n    component: farmerProfile,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/ContractInfoFarmer\",\n    name: \"Contracts Info\",\n    rtlName: \"الرموز\",\n    icon: \"tim-icons icon-Requests-02\",\n    component: ContractInfoFarmer,\n    layout: \"/admin\",\n  },\n\n  // {\n  //   path: \"/MakePayment\",\n  //   name: \"Make Payment\",\n  //   rtlName: \"الرموز\",\n  //   icon: \"tim-icons icon-money-coins\",\n  //   component: MakePayment,\n  //   layout: \"/admin\",\n  // },\n  {\n    path: \"/Help\",\n    name: \"Help\",\n    rtlName: \"الرموز\",\n    icon: \"tim-icons icon-single-02\",\n    component: Help,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/updateFarmer\",\n    name: \"Update Farmer\",\n    rtlName: \"الرموز\",\n    icon: \"tim-icons\",\n    component: updateFarmer,\n    layout: \"/admin\",\n  },\n];\nexport default routes;","\nimport React from \"react\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"../../components/Navbars/AdminNavbar\";\nimport Footer from \"../../components/Footer/Footer\";\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\n// import FixedPlugin from \"../../components/FixedPlugin/FixedPlugin\";\n// import Dashboard from \"../../views/Dashboard\";\nimport routes from \"../../routes\";\n\nimport logo from \"../../assets/img/react-logo.png\";\nimport { BackgroundColorContext } from \"../../contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Admin(props) {\n  const location = useLocation();\n  const mainPanelRef = React.useRef(null);\n  const [sidebarOpened, setsidebarOpened] = React.useState(\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\n  );\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(mainPanelRef.current, {\n        suppressScrollX: true,\n      });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    };\n  });\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    if (mainPanelRef.current) {\n      mainPanelRef.current.scrollTop = 0;\n    }\n  }, [location]);\n  // // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setsidebarOpened(!sidebarOpened);\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  \n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n    return \"Farmer Dashboard\";\n  };\n\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color, changeColor }) => (\n        <React.Fragment>\n          <div className=\"wrapper\">\n          <Sidebar\n              routes={routes}\n              logo={{\n                outterLink: \"#\",\n                text: \"Land Registration\",\n                imgSrc: logo,\n              }}\n              toggleSidebar={toggleSidebar}\n            />\n            <div className=\"main-panel\" ref={mainPanelRef} data={color}>\n            <AdminNavbar\n                brandText={getBrandText(location.pathname)} \n                toggleSidebar={toggleSidebar}\n                sidebarOpened={sidebarOpened}\n              />\n              <Switch>\n                {getRoutes(routes)}\n                {/* <Redirect from=\"*\" to=\"/admin/dashboard\" /> */}\n              </Switch>\n              <Footer fluid />\n            </div>\n          </div>\n          {/* <FixedPlugin bgColor={color} handleBgClick={changeColor} /> */}\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default Admin;\n","export default __webpack_public_path__ + \"static/media/react-logo.561f1671.png\";","import {\n    LoadingContainer\n} from '@drizzle/react-components';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n// reactstrap components\nimport {\n    Button, Card, CardBody, CardHeader, CardTitle, Col, Row, Table\n} from \"reactstrap\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Farm from \"../artifacts/Farm.json\";\nimport getWeb3 from \"../getWeb3\";\nimport '../index.css';\n\n\nconst drizzleOptions = {\n    contracts: [Farm]\n}\n\n\nvar BusinessCount;\nvar BusinessMap = [];\nvar BusinessTable = [];\n\nclass BusinessInfo extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            FarmInstance: undefined,\n            account: null,\n            web3: null,\n            businesses: 0,\n            verified: '',\n            not_verified: '',\n            BusinessTable : []\n        }\n    }\n\n    verifyBusiness = (item) => async () => {\n        //console.log(\"Hello\");\n        //console.log(item);\n\n        await this.state.FarmInstance.methods.verify(\n            item\n        ).send({\n            from: this.state.account,\n            gas: 2100000\n        });\n\n        //Reload\n        window.location.reload(false);\n\n    }\n\n    reject = (item) => async () => {\n\n        await this.state.FarmInstance.methods.reject(\n            item\n        ).send({\n            from: this.state.account,\n            gas: 2100000\n        });\n\n        window.location.reload(false);\n    }\n\n    componentDidMount = async () => {\n        //For refreshing page only once\n        if (!window.location.hash) {\n            window.location = window.location + '#loaded';\n            window.location.reload();\n        }\n        console.log(window.location.hash);\n\n        try {\n            //Get network provider and web3 instance\n            const web3 = await getWeb3();\n\n            const accounts = await web3.eth.getAccounts();\n\n            const currentAddress = await web3.currentProvider.selectedAddress;\n            //console.log(currentAddress);\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = Farm.networks[networkId];\n            const instance = new web3.eth.Contract(\n                Farm.abi,\n                deployedNetwork && deployedNetwork.address,\n            );\n\n            this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\n\n            BusinessCount = await this.state.FarmInstance.methods.getBusinessCount().call();\n            console.log(BusinessCount);\n\n            BusinessMap = await this.state.FarmInstance.methods.getBusinesses().call();\n\n            var verified = await this.state.FarmInstance.methods.isAdmin1(currentAddress).call();\n            //console.log(verified);\n            this.setState({ verified: verified });\n\n\n            for (let i = 0; i < BusinessCount; i++) {\n                var business = await this.state.FarmInstance.methods.getBusinessDetails(BusinessMap[i]).call();\n                console.log(business[4]);\n                var business_verify = await this.state.FarmInstance.methods.isVerified1(BusinessMap[i]).call();\n                console.log(business_verify);\n                business.verified = business_verify;\n\n                //business.push(business_verify);\n                var not_verify = await this.state.FarmInstance.methods.isRejected(BusinessMap[i]).call();\n                console.log(not_verify);\n\n                // BusinessTable.push(<tr><td>{i + 1}</td><td>{BusinessMap[i]}</td><td>{business[0]}</td><td>{business[1]}</td><td>{business[2]}</td><td>{business[3]}</td><td>{business[5]}</td><td><a href={`https://ipfs.io/ipfs/${business[4]}`} target=\"_blank\" rel=\"noreferrer\">Click Here</a></td>\n                BusinessTable.push(<tr><td>{i + 1}</td><td>{BusinessMap[i]}</td><td>{business[0]}</td><td>{business[1]}</td><td>{business[2]}</td><td>{business[3]}</td><td>{business[5]}</td><td><a href={`http://127.0.0.1:8080/ipfs/${business[4]}`} target=\"_blank\" rel=\"noreferrer\">Click Here</a></td>\n                                                                                                                                                                                                                      {/* ^ */}\n                                                                                                                                                                                                                      {/* | */}\n                                                                                                                                                                                                      {/* here you have to put host address for your ipfs server */}\n                                                                                                                                                        \n                    <td>{business.verified.toString()}</td>\n                    <td>\n                        <Button onClick={this.verifyBusiness(BusinessMap[i])} disabled={business_verify || not_verify} className=\"button-vote\">\n                            Verify\n                        </Button>\n                    </td>\n                    <td>\n                        <Button onClick={this.reject(BusinessMap[i])} disabled={business_verify || not_verify} className=\"btn btn-danger\">\n                            Reject\n                        </Button>\n                    </td></tr>)\n                // console.log(business[5]);\n            };\n            this.setState({ BusinessTable : BusinessTable });\n\n        } catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n                `Failed to load web3, accounts, or contract. Check console for details.`,\n            );\n            console.error(error);\n        }\n    };\n\n    render() {\n        if (!this.state.web3) {\n            return (\n                <div>\n                    <div>\n                        <h1>\n                            <Spinner animation=\"border\" variant=\"primary\" />\n                        </h1>\n                    </div>\n\n                </div>\n            );\n        }\n\n        if (!this.state.verified) {\n            return (\n                <div className=\"content\">\n                    <div>\n                        <Row>\n                            <Col xs=\"6\">\n                                <Card className=\"card-chart\">\n                                    <CardBody>\n                                        <h1>\n                                            You are not verified to view this page\n                                        </h1>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </div>\n\n                </div>\n            );\n        }\n\n        return (\n            <DrizzleProvider options={drizzleOptions}>\n                <LoadingContainer>\n                    <div className=\"content\">\n                        <Row>\n                            <Col xs=\"12\">\n                                <Card>\n                                    <CardHeader>\n                                        <CardTitle tag=\"h4\">Business Info</CardTitle>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <Table sclassName=\"tablesorter\" responsive color=\"black\">\n                                            <thead className=\"text-primary\">\n                                                <tr>\n                                                    <th>#</th>\n                                                    <th>Account Address</th>\n                                                    <th>Business Name</th>\n                                                    <th>City</th>\n                                                    <th>Reg. No/</th>\n                                                    <th>GST Number</th>\n                                                    <th>Email</th>\n                                                    <th>License</th>\n                                                    <th>Verification Status</th>\n                                                    <th>Verify Business</th>\n                                                    <th>Reject Business</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {this.state.BusinessTable}\n                                            </tbody>\n\n                                        </Table>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n\n\n                    </div>\n                </LoadingContainer>\n            </DrizzleProvider>\n        );\n\n    }\n}\n\nexport default BusinessInfo;\n","import {\n  LoadingContainer\n} from '@drizzle/react-components';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n// reactstrap components\nimport {\n  Card, CardBody, CardHeader, CardTitle, Col, Row, Table\n} from \"reactstrap\";\nimport Farm from \"../artifacts/Farm.json\";\nimport getWeb3 from \"../getWeb3\";\n\n\n\n\nconst drizzleOptions = {\n  contracts: [Farm]\n}\n\n\nvar verified;\n// var row = [];\n\n\nclass ContractInfo extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      FarmInstance: undefined,\n      account: null,\n      web3: null,\n      flag: null,\n      verified: '',\n      registered: '',\n      count: 0,\n      id: '',\n      row: []\n    }\n  }\n\n  componentDidMount = async () => {\n    //For refreshing page only once\n    if (!window.location.hash) {\n      window.location = window.location + '#loaded';\n      window.location.reload();\n    }\n\n    try {\n      //Get network provider and web3 instance\n      const web3 = await getWeb3();\n\n      const accounts = await web3.eth.getAccounts();\n\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Farm.networks[networkId];\n      const instance = new web3.eth.Contract(\n        Farm.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      const currentAddress = await web3.currentProvider.selectedAddress;\n      console.log(currentAddress);\n      this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\n      verified = await this.state.FarmInstance.methods.isVerified1(currentAddress).call();\n      console.log(verified);\n      this.setState({ verified: verified });\n      var registered = await this.state.FarmInstance.methods.isAdmin1(currentAddress).call();\n      console.log(registered);\n      this.setState({ registered: registered });\n\n      var count = await this.state.FarmInstance.methods.getContractsCount().call();\n      count = parseInt(count);\n      console.log(typeof (count));\n      console.log(count);\n      this.setState({count:count});\n\n      const row = [];\n      for (let i = 0; i < count; i++) {\n        const businessId = await this.state.FarmInstance.methods.getContractBusiness(i).call();\n        const farmerId = await this.state.FarmInstance.methods.getContractFarmer(i).call();\n        let business = await this.state.FarmInstance.methods.getBusinessDetails(businessId).call();\n        let farmer = await this.state.FarmInstance.methods.getFarmerDetails(farmerId).call();\n        const contractID = await this.state.FarmInstance.methods.getContractId(i).call();\n        const quantity = await this.state.FarmInstance.methods.getContractQuantity(i).call();\n        const cropName = await this.state.FarmInstance.methods.getContractCropName(i).call();\n        const pricePerKg = await this.state.FarmInstance.methods.getContractPrice(i).call();\n        const deliveryTime = await this.state.FarmInstance.methods.getContractDeadLine(i).call();\n        const totalPrice = await this.state.FarmInstance.methods.getContractTotalPrice(i).call();\n        const advPayment = await this.state.FarmInstance.methods.getContractAdvPayment(i).call();\n        const businessName = business[0];\n        const farmerName = farmer[0];\n          // const farmerAge = farmer[1];\n          // const farmerCity = farmer[2];\n          // const farmerAdhar = farmer[3];\n          // const farmerPan = farmer[4];\n        row.push({ contractID, cropName, quantity, businessName, farmerName,\n            pricePerKg, deliveryTime, totalPrice, advPayment });\n            //  farmerAge, farmerCity, farmerAdhar, farmerPan, \n      }\n      this.setState({ row: row });\n      console.log(row)\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return (\n        <div>\n          <div>\n            <h1>\n              <Spinner animation=\"border\" variant=\"primary\" />\n            </h1>\n          </div>\n\n        </div>\n      );\n    }\n\n    if (!this.state.registered) {\n      return (\n        <div className=\"content\">\n          <div>\n            <Row>\n              <Col xs=\"6\">\n                <Card className=\"card-chart\">\n                  <CardBody>\n                    <h1>\n                      You are not verified to view this page\n                    </h1>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n\n        </div>\n      );\n    }\n\n\n    return (\n      <>\n        <div className=\"content\">\n          <DrizzleProvider options={drizzleOptions}>\n            <LoadingContainer>\n              <Row>\n                <Col lg=\"12\" md=\"12\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle tag=\"h4\">Contracts\n                      </CardTitle>\n                    </CardHeader>\n                    <CardBody>\n                      <Table className=\"tablesorter\" responsive color=\"black\">\n                      <thead className=\"text-primary\">\n                          <tr>\n                            <th>#</th>\n                            {/* <th>Business ID</th> */}\n                            <th>Business Name</th>\n                            <th>Farmer Name</th>\n                            <th>Crop name</th>\n                            <th>Land Doc</th>\n                            <th>Quantity(kg)</th>\n                            <th>Price(kg)</th>\n                            <th>Delivery Time</th>\n                            <th>Total Price</th>\n                            <th>Advanced Payment</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.state.row.map((item, index) => (\n                            <tr key={index}>\n                              <td>{index + 1}</td>\n                              <td>{item.businessName}</td>\n                              <td>{item.farmerName}</td>\n                              <td>{item.cropName}</td>\n                              <td><a href={`http://127.0.0.1:8080/ipfs/${item.landDoc}`} target=\"_blank\" rel=\"noreferrer\">Click Here</a></td>\n                              {/* <td><a href={`https://ipfs.io/ipfs/${item.landDoc}`} target=\"_blank\" rel=\"noreferrer\">Click Here</a></td> */}\n                              <td>{item.quantity}</td>\n                              <td>{item.pricePerKg}</td>\n                              <td>{item.deliveryTime}</td>\n                              <td>{item.totalPrice}</td>\n                              <td>{item.advPayment}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </LoadingContainer>\n          </DrizzleProvider>\n        </div>\n      </>\n\n    );\n\n  }\n}\n\nexport default ContractInfo;","\nimport React from \"react\";\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"../../components/Navbars/AdminNavbar\";\nimport Footer from \"../../components/Footer/Footer\";\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\n// import FixedPlugin from \"../../components/FixedPlugin/FixedPlugin\";\n// import Admin1Dashboard from \"../../views/Admin1Dashboard\";\nimport routes from \"../../routesAdmin1\";\n\nimport logo from \"../../assets/img/react-logo.png\";\nimport { BackgroundColorContext } from \"../../contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Admin1(props) {\n  const location = useLocation();\n  const mainPanelRef = React.useRef(null);\n  const [sidebarOpened, setsidebarOpened] = React.useState(\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\n  );\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(mainPanelRef.current, {\n        suppressScrollX: true,\n      });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    };\n  });\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    if (mainPanelRef.current) {\n      mainPanelRef.current.scrollTop = 0;\n    }\n  }, [location]);\n  // // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setsidebarOpened(!sidebarOpened);\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/Admin1\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  \n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n    return \"Admin Dashboard\";\n  };\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color, changeColor }) => (\n        <React.Fragment>\n          <div className=\"wrapper\">\n            <Sidebar\n              routes={routes}\n              logo={{\n                outterLink: \"#\",\n                text: \"Agricon\",\n                imgSrc: logo,\n              }}\n              toggleSidebar={toggleSidebar}\n            />\n            <div className=\"main-panel\" ref={mainPanelRef} data={color}>\n            <AdminNavbar\n                brandText={getBrandText(location.pathname)}\n                toggleSidebar={toggleSidebar}\n                sidebarOpened={sidebarOpened}\n              />\n              <Switch>\n                {getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/Admin1/Admin1Dashboard\" />\n              </Switch>\n              <Footer fluid />\n            </div>\n          </div>\n          {/* <FixedPlugin bgColor={color} handleBgClick={changeColor} /> */}\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default Admin1;\n","import { ContractData, LoadingContainer } from '@drizzle/react-components';\r\nimport { DrizzleProvider } from '@drizzle/react-plugin';\r\nimport React, { Component } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n// reactstrap components\r\nimport { Button, Card, CardBody, CardHeader, Col, Row } from \"reactstrap\";\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Farm from \"../artifacts/Farm.json\";\r\nimport \"../card.css\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport '../index.css';\r\n\r\nconst drizzleOptions = {\r\n    contracts: [Farm]\r\n}\r\n\r\n// var verified;\r\n// var row = [];\r\nvar farmerarr = [];\r\nvar businessarr = [];\r\nvar reqsarr = [];\r\n\r\nclass Admin1Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            FarmInstance: undefined,\r\n            account: null,\r\n            web3: null,\r\n            verified: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        //For refreshing page only once\r\n        if (!window.location.hash) {\r\n            window.location = window.location + '#loaded';\r\n            window.location.reload();\r\n        }\r\n\r\n        try {\r\n            //Get network provider and web3 instance\r\n            const web3 = await getWeb3();\r\n\r\n            const accounts = await web3.eth.getAccounts();\r\n\r\n            const currentAddress = await web3.currentProvider.selectedAddress;\r\n            const networkId = await web3.eth.net.getId();\r\n            const deployedNetwork = Farm.networks[networkId];\r\n            const instance = new web3.eth.Contract(\r\n                Farm.abi,\r\n                deployedNetwork && deployedNetwork.address,\r\n            );\r\n\r\n            this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\r\n\r\n            var verified = await this.state.FarmInstance.methods.isAdmin1(currentAddress).call();\r\n            this.setState({ verified: verified });\r\n\r\n            farmerarr.push(<ContractData contract=\"Farm\" method=\"getFarmersCount\" />);\r\n            businessarr.push(<ContractData contract=\"Farm\" method=\"getBusinessCount\" />);\r\n            reqsarr.push(<ContractData contract=\"Farm\" method=\"getTotalRequestCount\" />);\r\n\r\n        } catch (error) {\r\n            // Catch any errors for any of the above operations.\r\n            alert(\r\n                `Failed to load web3, accounts, or contract. Check console for details.`,\r\n            );\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (!this.state.web3) {\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <h1>\r\n                            <Spinner animation=\"border\" variant=\"primary\" />\r\n                        </h1>\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (!this.state.verified) {\r\n            return (\r\n                <div className=\"content\">\r\n                    <div>\r\n                        <Row>\r\n                            <Col xs=\"6\">\r\n                                <Card className=\"card-chart\">\r\n                                    <CardBody>\r\n                                        <h1>\r\n                                            You are not verified to view this page\r\n                                        </h1>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <DrizzleProvider options={drizzleOptions}>\r\n                <LoadingContainer>\r\n                    <div className=\"content\">\r\n                        <div className=\"main-section\">\r\n                            <Row>\r\n                                <Col lg=\"4\">\r\n                                    <div class=\"dashbord dashbord-skyblue\">\r\n                                        <div class=\"icon-section\">\r\n                                            <i class=\"fa fa-users\" aria-hidden=\"true\"></i><br />\r\n                                            <medium>Total Farmers</medium><br />\r\n                                            <p> {farmerarr} </p>\r\n                                        </div>\r\n                                        <div class=\"detail-section\"><br />\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col lg=\"4\">\r\n                                    <div class=\"dashbord dashbord-blue\">\r\n                                        <div class=\"icon-section\">\r\n                                            <i class=\"fa fa-bell\" aria-hidden=\"true\"></i><br />\r\n                                            <medium>Total Requests</medium><br />\r\n                                            <p>{reqsarr}</p>\r\n                                        </div>\r\n                                        <div class=\"detail-section\">\r\n                                            <br />\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col lg=\"4\">\r\n                                    <div class=\"dashbord dashbord-orange\">\r\n                                        <div class=\"icon-section\">\r\n                                            <i class=\"fa fa-users\" aria-hidden=\"true\"></i><br />\r\n                                            <medium>Total Business</medium><br />\r\n                                            <p>{businessarr}</p>\r\n                                        </div>\r\n                                        <div class=\"detail-section\"><br />\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        <Row>\r\n                            <Col lg=\"4\">\r\n                                <Card>\r\n                                    <CardHeader>\r\n                                        <h5 className=\"title\">Farmers Information</h5>\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n                                        <div className=\"chart-area\">\r\n\r\n                                            <Button href=\"/Admin1/FarmerInfo\" className=\"btn-fill\" color=\"primary\">\r\n                                                Verify Farmers\r\n                                            </Button>\r\n                                        </div>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col lg=\"4\">\r\n                                <Card>\r\n                                    <CardHeader>\r\n                                        <h5 className=\"title\">Contracts Signed</h5>\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n                                        <div className=\"chart-area\">\r\n\r\n                                            <Button href=\"/Admin1/ContractInfo\" className=\"btn-fill\" color=\"primary\">\r\n                                                View Contracts\r\n                                            </Button>\r\n                                        </div>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col lg=\"4\">\r\n                                <Card>\r\n                                    <CardHeader>\r\n                                        <h5 className=\"title\">Business Information</h5>\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n                                        <div className=\"chart-area\">\r\n\r\n                                            <Button href=\"/Admin1/BusinessInfo\" className=\"btn-fill\" color=\"primary\">\r\n                                                Verify Businesses\r\n                                            </Button>\r\n                                        </div>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n\r\n\r\n                        </Row>\r\n                    </div>\r\n                </LoadingContainer>\r\n            </DrizzleProvider>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Admin1Dashboard;","import { LoadingContainer } from '@drizzle/react-components';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n// reactstrap components\nimport {\n    Button, Card, CardBody, CardHeader, CardTitle, Col, Row, Table\n} from \"reactstrap\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Farm from \"../artifacts/Farm.json\";\nimport getWeb3 from \"../getWeb3\";\nimport '../index.css';\n\n\nconst drizzleOptions = {\n    contracts: [Farm]\n}\n\nvar farmerTable = [];\n// var completed = true;\n\n// function sendMail(email, name) {\n//     // alert(typeof(name));\n\n//     var tempParams = {\n//         from_name: email,\n//         to_name: name,\n//         function: 'request and buy any land/property',\n//     };\n\n//     window.emailjs.send('service_vrxa1ak', 'template_zhc8m9h', tempParams)\n//         .then(function (res) {\n//             alert(\"Mail sent successfully\");\n//         })\n// }\n\nclass FarmerInfo extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            FarmInstance: undefined,\n            account: null,\n            web3: null,\n            farmers: 0,\n            verified: '',\n            farmerTable : []\n        }\n    }\n\n\n    verifyFarmer = (item) => async () => {\n        //console.log(\"Hello\");\n        //console.log(item);\n\n        await this.state.FarmInstance.methods.verify(\n            item\n        ).send({\n            from: this.state.account,\n            gas: 2100000\n        });\n\n        //Reload\n        window.location.reload(false);\n\n    }\n\n    reject = (item) => async () => {\n        await new Promise(resolve => setTimeout(resolve, 10000));\n\n        await this.state.FarmInstance.methods.reject(\n            item\n        ).send({\n            from: this.state.account,\n            gas: 2100000\n        });\n\n        window.location.reload(false);\n    }\n\n    componentDidMount = async () => {\n        //For refreshing page only once\n        if (!window.location.hash) {\n            window.location = window.location + '#loaded';\n            window.location.reload();\n        }\n\n        try {\n            //Get network provider and web3 instance\n            const web3 = await getWeb3();\n\n            const accounts = await web3.eth.getAccounts();\n\n            const currentAddress = await web3.currentProvider.selectedAddress;\n            //console.log(currentAddress);\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = Farm.networks[networkId];\n            const instance = new web3.eth.Contract(\n                Farm.abi,\n                deployedNetwork && deployedNetwork.address,\n            );\n\n            this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\n\n\n            var farmersCount = await this.state.FarmInstance.methods.getFarmersCount().call();\n            // console.log(farmersCount + \" Ashiwn\");\n\n\n            var farmersMap = [];\n            farmersMap = await this.state.FarmInstance.methods.getFarmers().call();\n            // console.log(farmersMap);\n\n            var verified = await this.state.FarmInstance.methods.isAdmin1(currentAddress).call();\n            //console.log(verified);\n            this.setState({ verified: verified });\n\n            for (let i = 0; i < farmersCount; i++) {\n            //     // var i =3;\n                var farmer = await this.state.FarmInstance.methods.getFarmerDetails(farmersMap[i]).call();\n                // console.log(farmer);\n                var farmer_verify = await this.state.FarmInstance.methods.isVerified1(farmersMap[i]).call();\n                console.log(farmer_verify);\n                farmer.verified = farmer_verify;\n\n                var not_verify = await this.state.FarmInstance.methods.isRejected(farmersMap[i]).call();\n                console.log(not_verify);\n                // farmerTable.push(<tr><td>{i + 1}</td><td>{farmersMap[i]}</td><td>{farmer[0]}</td><td>{farmer[1]}</td><td>{farmer[2]}</td><td>{farmer[3]}</td><td>{farmer[4]}</td><td><a href={`https://ipfs.io/ipfs/${farmer[5]}`} target=\"_blank\" rel=\"noreferrer\">Click Here</a></td>\n                farmerTable.push(<tr><td>{i + 1}</td><td>{farmersMap[i]}</td><td>{farmer[0]}</td><td>{farmer[1]}</td><td>{farmer[2]}</td><td>{farmer[3]}</td><td>{farmer[4]}</td><td><a href={`http://127.0.0.1:8080/ipfs/${farmer[5]}`} target=\"_blank\" rel=\"noreferrer\">Click Here</a></td>\n                                                                                                                                                                                                      {/* ^ */}\n                                                                                                                                                                                                      {/* | */}\n                                                                                                                                                                                       {/* here you have to put host address for your ipfs server */}\n                    \n                    <td>{farmer.verified.toString()}</td>\n                    <td>\n                        <Button onClick={this.verifyFarmer(farmersMap[i])} disabled={farmer_verify || not_verify} className=\"button-vote\">\n                            Verify\n                        </Button>\n                    </td>\n                    <td>\n                        <Button onClick={this.reject(farmersMap[i])} disabled={farmer_verify || not_verify} className=\"btn btn-danger\">\n                            Reject\n                        </Button>\n                    </td>\n                </tr>)\n            };\n            this.setState({ farmerTable : farmerTable });\n\n        } catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n                `Failed to load web3, accounts, or contract. Check console for details.`,\n            );\n            console.error(error);\n        }\n    };\n\n\n\n    render() {\n        if (!this.state.web3) {\n            return (\n                <div>\n                    <div>\n                        <h1>\n                            <Spinner animation=\"border\" variant=\"primary\" />\n                        </h1>\n                    </div>\n\n                </div>\n            );\n        }\n\n        if (!this.state.verified) {\n            return (\n                <div className=\"content\">\n                    <div>\n                        <Row>\n                            <Col xs=\"6\">\n                                <Card className=\"card-chart\">\n                                    <CardBody>\n                                        <h1>\n                                            You are not verified to view this page\n                                        </h1>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <DrizzleProvider options={drizzleOptions}>\n                <LoadingContainer>\n                    <div className=\"content\">\n                        <Row>\n                            <Col xs=\"12\">\n                                <Card>\n                                    <CardHeader>\n                                        <CardTitle tag=\"h5\">Farmers Info</CardTitle>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <Table className=\"tablesorter\" responsive color=\"black\">\n                                            <thead className=\"text-primary\">\n                                                <tr>\n                                                    <th>#</th>\n                                                    <th>Account Address</th>\n                                                    <th>Name</th>\n                                                    <th>Age</th>\n                                                    <th>City</th>\n                                                    <th>Aadhar Number</th>\n                                                    <th>Pan Number</th>\n                                                    <th>Land Document</th>\n                                                    <th>Verification Status</th>\n                                                    <th>Verify Farmer</th>\n                                                    <th>Reject Farmer</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {this.state.farmerTable}\n                                            </tbody>\n\n                                        </Table>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </div>\n                </LoadingContainer>\n            </DrizzleProvider>\n        );\n\n    }\n}\n\nexport default FarmerInfo;\n","import Admin1Dashboard from \"./views/Admin1Dashboard\";\n// import ApproveContract from \"./views/ApproveContract\";\nimport BusinessInfo from \"./views/BusinessInfo\";\nimport FarmerInfo from \"./views/FarmerInfo\";\nimport ContractInfo from \"./views/ContractInfo\";\n\nvar routes = [\n  {\n    path: \"/Admin1Dashboard\",\n    name: \"Admin Dashboard\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    component: Admin1Dashboard,\n    layout: \"/Admin1\",\n  },\n\n  {\n    path: \"/BusinessInfo\",\n    name: \"Business Info\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-single-02\",\n    component: BusinessInfo,\n    layout: \"/Admin1\",\n  },\n  {\n    path: \"/FarmerInfo\",\n    name: \"Farmer Info\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-single-02\",\n    component: FarmerInfo,\n    layout: \"/Admin1\",\n  },\n  {\n    path: \"/ContractInfo\",\n    name: \"Contracts Info\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-send\",\n    component: ContractInfo,\n    layout: \"/Admin1\",\n  },\n];\nexport default routes;","import { LoadingContainer } from '@drizzle/react-components';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Row, Table } from \"reactstrap\";\nimport Farm from \"../artifacts/Farm.json\";\nimport getWeb3 from \"../getWeb3\";\nimport \"../index.css\";\nimport \"../card.css\"\n\nconst drizzleOptions = {\n  contracts: [Farm]\n}\n\nvar userarr;\n// var countarr;\n\nclass BusinessDashboard extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      FarmInstance: undefined,\n      account: null,\n      web3: null,\n      flag: null,\n      verified: '',\n      registered: '',\n      count: 0,\n      id: '',\n      row: [],\n    }\n  }\n\n  componentDidMount = async () => {\n    try {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Farm.networks[networkId];\n      const instance = new web3.eth.Contract(\n        Farm.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      const currentAddress = await web3.currentProvider.selectedAddress;\n      this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\n\n      const verified = await this.state.FarmInstance.methods.isVerified1(currentAddress).call();\n      this.setState({ verified: verified });\n\n      const registered = await this.state.FarmInstance.methods.isBusiness(currentAddress).call();\n      this.setState({ registered: registered });\n\n      const count = await this.state.FarmInstance.methods.getCropReqCount().call();\n      this.setState({ count: parseInt(count) });\n\n      userarr = await this.state.FarmInstance.methods.getFarmersCount().call();\n\n\n      const row = [];\n      for (let i = 0; i < count; i++) {\n        const businessId = await this.state.FarmInstance.methods.getCropRequirementBusiness(i).call();\n        const status = await this.state.FarmInstance.methods.getCropRequirementStatus(i).call();\n        if (businessId.toLowerCase() === currentAddress.toLowerCase() && !status) {\n          const cropName = await this.state.FarmInstance.methods.getCropRequirementCropName(i).call();\n          const quantity = await this.state.FarmInstance.methods.getCropRequirementQuantity(i).call();\n          const pricePerKg = await this.state.FarmInstance.methods.getCropRequirementPrice(i).call();\n          const deliveryTime = await this.state.FarmInstance.methods.getCropRequirementDelTime(i).call();\n          const totalPrice = await this.state.FarmInstance.methods.getCropRequirementTotalPrice(i).call();\n          const advPayment = await this.state.FarmInstance.methods.getCropRequirementAdvPayment(i).call();\n          row.push({ cropName, quantity, pricePerKg, deliveryTime, totalPrice, advPayment });\n        }\n      }\n      this.setState({ row: row });\n      // countarr = row.length;\n\n    } catch (error) {\n      alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n      console.error(error);\n    }\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return (\n        <div>\n          <div>\n            <h1>\n              <Spinner animation=\"border\" variant=\"primary\" />\n            </h1>\n          </div>\n        </div>\n      );\n    }\n\n    if (!this.state.registered) {\n      return (\n        <div className=\"content\">\n          <div>\n            <Row>\n              <Col xs=\"6\">\n                <Card className=\"card-chart\">\n                  <CardBody>\n                    <h1>\n                      You are not verified to view this page\n                    </h1>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"content\">\n          <DrizzleProvider options={drizzleOptions}>\n            <LoadingContainer>\n              <div className=\"main-section\">\n                <Row>\n                  <Col lg=\"4\">\n                    <div class=\"dashbord dashbord-skyblue\">\n                      <div class=\"icon-section\">\n                        <i class=\"fa fa-users\" aria-hidden=\"true\"></i><br />\n                        <medium>Total Farmers</medium><br />\n                        <p> {userarr} </p>\n                      </div>\n                      <div class=\"detail-section\"><br />\n                      </div>\n                    </div>\n                  </Col>\n                  <Col lg=\"4\">\n                    <div class=\"dashbord dashbord-orange\">\n                      <div class=\"icon-section\">\n                        <i class=\"fa fa-landmark\" aria-hidden=\"true\"></i><br />\n                        <medium>Added CropRquirements Count</medium><br />\n                        <p>{this.state.row.length}</p>\n                      </div>\n                      <div class=\"detail-section\"><br />\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </div>\n            </LoadingContainer>\n          </DrizzleProvider>\n          <Row>\n            <Col lg=\"3\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Wish to Add Crop Requirement !</h5>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n\n                    <Button href=\"/Business/AddRequirement\" disabled={!this.state.verified} className=\"btn-fill\" color=\"primary\">\n                      Add Crop Requirement\n                    </Button>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"3\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Profile</h5>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Button href=\"/Business/BusinessProfile\" className=\"btn-fill\" color=\"primary\">\n                      View Profile\n                    </Button>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"3\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Requests</h5>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Button href=\"/Business/ApproveRequest\" disabled={!this.state.verified} className=\"btn-fill\" color=\"primary\">\n                      View all Requests\n                    </Button>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"3\">\n              <Card>\n                <CardHeader>\n                  {/* <CardTitle>View Signed Contracts!</CardTitle> */}\n                  <h5 className=\"title\">View Signed Contracts!</h5>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Button href=\"/Business/ContractInfoBusiness\" className=\"btn-fill\" color=\"primary\">\n                      View contracts\n                    </Button>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n\n          <DrizzleProvider options={drizzleOptions}>\n            <LoadingContainer>\n              <Row>\n                <Col lg=\"12\" md=\"12\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle tag=\"h4\">Crop Requirement Info</CardTitle>\n                    </CardHeader>\n                    <CardBody>\n                      <Table className=\"tablesorter\" responsive color=\"black\">\n                        <thead className=\"text-primary\">\n                          <tr>\n                            <th>#</th>\n                            <th>Crop name</th>\n                            <th>Quantity(kg)</th>\n                            <th>Price(kg)</th>\n                            <th>Delivery Time</th>\n                            <th>Total Price</th>\n                            <th>Advanced Payment</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.state.row.map((item, index) => (\n                            <tr key={index}>\n                              <td>{index + 1}</td>\n                              <td>{item.cropName}</td>\n                              <td>{item.quantity}</td>\n                              <td>{item.pricePerKg}</td>\n                              <td>{item.deliveryTime}</td>\n                              <td>{item.totalPrice}</td>\n                              <td>{item.advPayment}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </LoadingContainer>\n          </DrizzleProvider>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default BusinessDashboard;","import {\n  LoadingContainer\n} from '@drizzle/react-components';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport {\n  Button,\n  Card, CardBody,\n  CardFooter, CardHeader, Col, Form, FormGroup, Input,\n  Row\n} from \"reactstrap\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Farm from \"../artifacts/Farm.json\";\nimport getWeb3 from \"../getWeb3\";\nimport '../index.css';\n\n\n\nconst drizzleOptions = {\n  contracts: [Farm]\n}\n\n// var buyers = 0;\n// var sellers = 0;\nvar business;\nvar businessTable = [];\nvar verification = [];\n\nclass BusinessProfile extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      FarmInstance: undefined,\n      account: null,\n      web3: null,\n      farmers: 0,\n      businesses: 0,\n      verified: false,\n      businessTable : []\n    }\n  }\n\n  componentDidMount = async () => {\n    //For refreshing page only once\n    if (!window.location.hash) {\n      window.location = window.location + '#loaded';\n      window.location.reload();\n    }\n\n    try {\n      //Get network provider and web3 instance\n      const web3 = await getWeb3();\n\n      const accounts = await web3.eth.getAccounts();\n\n      const currentAddress = await web3.currentProvider.selectedAddress;\n      console.log(currentAddress);\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Farm.networks[networkId];\n      const instance = new web3.eth.Contract(\n        Farm.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\n\n      var business_verify = await this.state.FarmInstance.methods.isVerified1(currentAddress).call();\n      console.log(business_verify);\n      this.setState({ verified: business_verify })\n      var not_verify = await this.state.FarmInstance.methods.isRejected(currentAddress).call();\n      console.log(not_verify);\n      if (business_verify) {\n        verification.push(<p id=\"verified\">Verified <i class=\"fas fa-user-check\"></i></p>);\n      } else if (not_verify) {\n        verification.push(<p id=\"rejected\">Rejected <i class=\"fas fa-user-times\"></i></p>);\n      } else {\n        verification.push(<p id=\"unknown\">Not Yet Verified <i class=\"fas fa-user-cog\"></i></p>);\n      }\n\n      business = await this.state.FarmInstance.methods.getBusinessDetails(currentAddress).call();\n      // console.log(seller);\n      // console.log(seller[0]);\n\n      businessTable.push(<>\n        <Row>\n          <Col md=\"12\">\n            <FormGroup>\n              <label>Your Wallet Address: </label>\n              <Input\n                disabled\n                type=\"text\"\n                value={currentAddress}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <FormGroup>\n              <label>Name</label>\n              <Input\n                disabled\n                type=\"text\"\n                value={business[0]}\n              />\n            </FormGroup>\n          </Col>\n\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <FormGroup>\n              <label>City</label>\n              <Input\n                disabled\n                type=\"text\"\n                value={business[1]}\n              />\n            </FormGroup>\n          </Col>\n\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <FormGroup>\n              <label>Reg. Number</label>\n              <Input\n                disabled\n                type=\"text\"\n                value={business[2]}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <FormGroup>\n              <label>GST Number</label>\n              <Input\n                disabled\n                type=\"text\"\n                value={business[3]}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <FormGroup>\n              <label>License</label>\n              {/* <div class=\"post-meta\"><span class=\"timestamp\"> <a href={`https://ipfs.io/ipfs/${business[4]}`} target=\"_blank\" rel=\"noreferrer\">Here</a></span></div> */}\n              <div class=\"post-meta\"><span class=\"timestamp\"> <a href={`http://127.0.0.1:8080/ipfs/${business[4]}`} target=\"_blank\" rel=\"noreferrer\">Here</a></span></div>\n                                                                                      {/* ^ */}\n                                                                                      {/* | */}\n                                                                        {/* here you have to put host address for your ipfs server */}\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <FormGroup>\n              <label>Email</label>\n              <Input\n                disabled\n                type=\"text\"\n                value={business[5]}\n              />\n            </FormGroup>\n          </Col>\n        </Row></>);\n        this.setState({businessTable : businessTable});\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return (\n        <div>\n          <div>\n            <h1>\n              <Spinner animation=\"border\" variant=\"primary\" />\n            </h1>\n          </div>\n\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"content\">\n        <DrizzleProvider options={drizzleOptions}>\n          <LoadingContainer>\n            <Row>\n              <Col md=\"8\">\n                <Card>\n                  <CardHeader>\n                    <h5 className=\"title\">Business Profile</h5>\n                    <h5 className=\"title\">{verification}</h5>\n\n                  </CardHeader>\n                  <CardBody>\n                    <Form>\n                      {this.state.businessTable}\n                      <Button href=\"/Business/updateBusiness\" className=\"btn-fill\" disabled={!this.state.verified} color=\"primary\">\n                        Edit Profile\n                      </Button>\n                    </Form>\n                  </CardBody>\n                  <CardFooter>\n\n                  </CardFooter>\n                </Card>\n              </Col>\n            </Row>\n          </LoadingContainer>\n        </DrizzleProvider>\n      </div>\n    );\n\n  }\n}\n\nexport default BusinessProfile;","import {\n  LoadingContainer\n} from '@drizzle/react-components';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n// reactstrap components\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Row, Table } from \"reactstrap\";\nimport Farm from \"../artifacts/Farm.json\";\nimport getWeb3 from \"../getWeb3\";\nimport \"../index.css\";\n\n\n\nconst drizzleOptions = {\n  contracts: [Farm]\n}\n\nvar verified;\n\nclass ContractInfoBusiness extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      FarmInstance: undefined,\n      account: null,\n      web3: null,\n      flag: null,\n      verified: '',\n      registered: '',\n      count: 0,\n      row : [],\n      id: '',\n      amount : 0\n    }\n  }\n\n  payRemain = ( farmerId, amount, index) => async() => {\n    this.setState({amount : amount})\n    console.log(this.state.amount);\n    console.log(amount);\n    console.log(index);\n    // console.log(amount);\n    await this.state.FarmInstance.methods.payRemaining(\n      farmerId,\n      index\n    ).send({\n      from: this.state.account,\n      gas: 2100000,\n      value: amount\n    });\n    window.location.reload();\n  }\n\n  componentDidMount = async () => {\n    //For refreshing page only once\n    if (!window.location.hash) {\n      window.location = window.location + '#loaded';\n      window.location.reload();\n    }\n\n    try {\n      //Get network provider and web3 instance\n      const web3 = await getWeb3();\n\n      const accounts = await web3.eth.getAccounts();\n\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Farm.networks[networkId];\n      const instance = new web3.eth.Contract(\n        Farm.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      const currentAddress = await web3.currentProvider.selectedAddress;\n      // console.log(currentAddress);\n      this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\n      verified = await this.state.FarmInstance.methods.isVerified1(currentAddress).call();\n      // console.log(verified);\n      this.setState({ verified: verified });\n      var registered = true;\n      this.setState({ registered: registered });\n\n      var count = await this.state.FarmInstance.methods.getContractsCount().call();\n      count = parseInt(count);\n      // console.log(typeof (count));\n      // console.log(count);\n      this.setState({count:count});\n\n      const row = [];\n      // const rowStatus = [];\n      for (let i = 0; i < count; i++) {\n        const businessId = await this.state.FarmInstance.methods.getContractBusiness(i).call();\n        const farmerId = await this.state.FarmInstance.methods.getContractFarmer(i).call();\n        let farmer = await this.state.FarmInstance.methods.getFarmerDetails(farmerId).call();\n        if (businessId.toLowerCase() === currentAddress.toLowerCase()) {\n          const contractID = await this.state.FarmInstance.methods.getContractId(i).call();\n          const quantity = await this.state.FarmInstance.methods.getContractQuantity(i).call();\n          const cropName = await this.state.FarmInstance.methods.getContractCropName(i).call();\n          const pricePerKg = await this.state.FarmInstance.methods.getContractPrice(i).call();\n          const deliveryTime = await this.state.FarmInstance.methods.getContractDeadLine(i).call();\n          const totalPrice = await this.state.FarmInstance.methods.getContractTotalPrice(i).call();\n          const advPayment = await this.state.FarmInstance.methods.getContractAdvPayment(i).call();\n          const PaymentStatus = await this.state.FarmInstance.methods.isComplete(i).call();\n          // rowStatus.push(PaymentStatus);\n          // if(PaymentStatus != true) PaymentStatus = false;\n          // console.log(PaymentStatus);\n          const farmerName = farmer[0];\n          // const farmerAge = farmer[1];\n          // const farmerCity = farmer[2];\n          // const farmerAdhar = farmer[3];\n          // const farmerPan = farmer[4];\n          const landDoc = farmer[5];\n          row.push({ contractID,  farmerId, cropName, quantity, farmerName, landDoc, \n             pricePerKg, deliveryTime, totalPrice, advPayment, PaymentStatus });\n            //  farmerAge, farmerCity, farmerAdhar, farmerPan, \n        }\n      }\n      this.setState({ row: row });\n      // console.log(row)\n\n\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return (\n        <div>\n          <div>\n            <h1>\n              <Spinner animation=\"border\" variant=\"primary\" />\n            </h1>\n          </div>\n\n        </div>\n      );\n    }\n\n    if (!this.state.registered || !this.state.verified) {\n      return (\n        <div className=\"content\">\n          <div>\n            <Row>\n              <Col xs=\"6\">\n                <Card>\n                  <CardBody>\n                    <h1>\n                      You are not verified to view this page\n                    </h1>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n\n        </div>\n      );\n    }\n\n\n    return (\n      <>\n        <div className=\"content\">\n          <DrizzleProvider options={drizzleOptions}>\n            <LoadingContainer>\n              <div className=\"main-section\">\n                <Row>\n                  {/* <Col lg=\"4\"> */}\n                    {/* <div class=\"dashbord dashbord-skyblue\">\n                      <div class=\"icon-section\">\n                        <i class=\"fa fa-users\" aria-hidden=\"true\"></i><br />\n                        <medium>Total Farmers</medium><br />\n                        {/* <p> {userarr} </p> */}\n                      {/* </div>\n                      <div class=\"detail-section\"><br />\n                      </div>\n                    </div> */}\n                  {/* </Col> */}\n                  <Col lg=\"4\">\n                    <div class=\"dashbord dashbord-orange\">\n                      <div class=\"icon-section\">\n                        <i class=\"fa fa-landmark\" aria-hidden=\"true\"></i><br />\n                        <medium>Signed Contracts Count</medium><br />\n                        <p>{this.state.row.length}</p>\n                      </div>\n                      <div class=\"detail-section\"><br />\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </div>\n            </LoadingContainer>\n          </DrizzleProvider>\n\n          <DrizzleProvider options={drizzleOptions}>\n            <LoadingContainer>\n              <Row>\n                <Col lg=\"12\" md=\"12\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle tag=\"h4\">My Contracts</CardTitle>\n                    </CardHeader>\n                    <CardBody>\n                      <Table className=\"tablesorter\" responsive color=\"black\">\n                        <thead className=\"text-primary\">\n                          <tr>\n                            <th>#</th>\n                            <th>Farmer ID</th>\n                            <th>Farmer Name</th>\n                            <th>Crop name</th>\n                            <th>Land Doc</th>\n                            <th>Quantity(kg)</th>\n                            <th>Price(kg)</th>\n                            <th>Delivery Time</th>\n                            <th>Total Price</th>\n                            <th>Advanced Payment</th>\n                            <th>Remaining Payment status</th>\n                            <th>Pay Remaining</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.state.row.map((item, index) => (\n                            <tr key={index}>\n                              <td>{index + 1}</td>\n                              <td>{item.farmerId}</td>\n                              <td>{item.farmerName}</td>\n                              <td>{item.cropName}</td>\n                              <td><a href={`http://127.0.0.1:8080/ipfs/${item.landDoc}`} target=\"_blank\" rel=\"noreferrer\">Click Here</a></td>\n                              {/* <td><a href={`https://ipfs.io/ipfs/${item.landDoc}`} target=\"_blank\" rel=\"noreferrer\">Click Here</a></td> */}\n                              <td>{item.quantity}</td>\n                              <td>{item.pricePerKg}</td>\n                              <td>{item.deliveryTime}</td>\n                              <td>{item.totalPrice}</td>\n                              <td>{item.advPayment}</td>\n                              <td>{item.PaymentStatus ? \"Paid\" : \"Pending\"}</td>\n                              <td>\n                                <Button onClick={this.payRemain(item.farmerId, item.totalPrice - item.advPayment, item.contractID - 1)} disabled={item.PaymentStatus} className=\"btn btn-danger\">Pay</Button>\n                              </td>\n                              {/* {console.log(item.farmerId)}\n                              {console.log(item.totalPrice - item.advPayment)}\n                              {console.log(item.contractID)} */}\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </LoadingContainer>\n          </DrizzleProvider>\n        </div>\n      </>\n\n    );\n\n  }\n}\n\nexport default ContractInfoBusiness;","\nimport React from \"react\";\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"../../components/Navbars/AdminNavbar\";\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\n// import FixedPlugin from \"../../components/FixedPlugin/FixedPlugin\";\n// import BusinessDashboard from  \"../../views/BusinessDashboard\";\nimport routes from \"../../routesbusiness\";\nimport Footer from \"../../components/Footer/Footer\";\nimport logo from \"../../assets/img/react-logo.png\";\nimport { BackgroundColorContext } from \"../../contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Business(props) {\n  const location = useLocation();\n  const mainPanelRef = React.useRef(null);\n  const [sidebarOpened, setsidebarOpened] = React.useState(\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\n  );\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(mainPanelRef.current, {\n        suppressScrollX: true,\n      });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    };\n  });\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    if (mainPanelRef.current) {\n      mainPanelRef.current.scrollTop = 0;\n    }\n  }, [location]);\n  // // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setsidebarOpened(!sidebarOpened);\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/Business\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  \n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n    return \"Business Dashboard\";\n  };\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color, changeColor }) => (\n        <React.Fragment>\n          <div className=\"wrapper\">\n            <Sidebar\n              routes={routes}\n              logo={{\n                outterLink: \"#\",\n                text: \"Agricon\",\n                imgSrc: logo,\n              }}\n              toggleSidebar={toggleSidebar}\n            />\n            <div className=\"main-panel\" ref={mainPanelRef} data={color}>\n            <AdminNavbar\n                brandText={getBrandText(location.pathname)}\n                toggleSidebar={toggleSidebar}\n                sidebarOpened={sidebarOpened}\n              />\n              {/* {console.log(getBrandText(location.pathname))} */}\n              <Switch>\n                {getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/Business/BusinessDashboard\" />\n              </Switch>\n              <Footer fluid />\n            </div>\n          </div>\n          {/* <FixedPlugin bgColor={color} handleBgClick={changeColor} /> */}\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default Business;\n","//This page will run once we create all admin panels and dashboard, so that he can mark farmers and businesses verified\r\n\r\nimport React, { Component } from 'react';\r\nimport FarmContract from \"../artifacts/Farm.json\";\r\nimport getWeb3 from \"../getWeb3\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { Spinner} from 'react-bootstrap';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass AddRequirement extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      FarmInstance: undefined,\r\n      account: null,\r\n      web3: null,\r\n      flag: null,\r\n      crop_name: '',\r\n      quantity_in_kg: 0,\r\n      price_per_kg: 0,\r\n      deliveryTime: 0,\r\n      _total: 0,\r\n      _advPayment : 0,\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    //For refreshing page only once\r\n    if (!window.location.hash) {\r\n      window.location = window.location + '#loaded';\r\n      window.location.reload();\r\n    }\r\n\r\n    try {\r\n      //Get network provider and web3 instance\r\n      const web3 = await getWeb3();\r\n\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = FarmContract.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        FarmContract.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n      );\r\n\r\n      this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\r\n      const currentAddress = await web3.currentProvider.selectedAddress;\r\n      console.log(currentAddress);\r\n      this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\r\n      var verified = await this.state.FarmInstance.methods.isVerified1(currentAddress).call();\r\n      console.log(verified);\r\n      this.setState({ verified: verified });\r\n      var registered = await this.state.FarmInstance.methods.isBusiness(currentAddress).call();\r\n      console.log(registered);\r\n      this.setState({ registered: registered });\r\n\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`,\r\n      );\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  //QmYdztkcPJLmGmwLmM4nyBfVatoBMRDuUjmgBupjmTodAP\r\n  AddRequirement = async () => {\r\n    // this.addimage();\r\n    // this.addDoc();\r\n    // alert('After add image')\r\n    await new Promise(resolve => setTimeout(resolve, 15000));\r\n    if (this.state.crop_name === '' || this.state.price_per_kg === '' || this.state.quantity_in_kg === '' || this.state.deliveryTime === '' || this.state._total === '' || this.state._advPayment === '') {\r\n      alert(\"All the fields are compulsory!\");\r\n    } else if ((!Number(this.state.price_per_kg)) || (!Number(this.state.quantity_in_kg)) || (!Number(this.state._total)) || (!Number(this.state._advPayment)) || (!Number(this.state.deliveryTime))) {\r\n      alert(\"price, Quantity, Total, and Advanced Payment must be a number!\");\r\n    } else {\r\n      await this.state.FarmInstance.methods.addCropRequirement(\r\n        this.state.crop_name,\r\n        this.state.quantity_in_kg,\r\n        this.state.price_per_kg,\r\n        this.state.deliveryTime, \r\n        this.state._total,\r\n        this.state._advPayment,\r\n        // this.state.ipfsHash, \r\n        // this.state.document\r\n        )\r\n        .send({\r\n          from: this.state.account,\r\n          gas: 2100000\r\n        }).then(response => {\r\n          this.props.history.push(\"/Business/BusinessDashboard\");\r\n        });\r\n\r\n      //Reload\r\n      window.location.reload(false);\r\n    }\r\n  }\r\n  // _city,string  _state, uint landPrice, uint _propertyPID,uint _surveyNum,string memory _ipfsHash\r\n\r\n  updateState = event => (\r\n    this.setState({ stateLoc: event.target.value })\r\n  )\r\n  updateCropName = event => (\r\n    this.setState({ crop_name: event.target.value })\r\n  )\r\n  updateQuantity = event => (\r\n    this.setState({quantity_in_kg: event.target.value})\r\n  )\r\n  updatePrice = event => (\r\n    this.setState({price_per_kg: event.target.value})\r\n  )\r\n  updateTotal = event => (\r\n    this.setState({_total: event.target.value})\r\n  )\r\n  updateAdvanced = event => (\r\n    this.setState({_advPayment: event.target.value})\r\n  )\r\n  updateDelTime = event => (\r\n    this.setState({deliveryTime: event.target.value})\r\n  )\r\n\r\n  render() {\r\n    if (!this.state.web3) {\r\n      return (\r\n        <div>\r\n          <div>\r\n            <h1>\r\n              <Spinner animation=\"border\" variant=\"primary\" />\r\n            </h1>\r\n          </div>\r\n\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!this.state.registered || !this.state.verified) {\r\n      return (\r\n        <div className=\"content\">\r\n          <div>\r\n            <Row>\r\n              <Col xs=\"6\">\r\n                <Card className=\"card-chart\">\r\n                  <CardBody>\r\n                    <h1>\r\n                      You are not verified to view this page\r\n                                        </h1>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col md=\"8\">\r\n            <Card>\r\n              <CardHeader>\r\n                <h5 className=\"title\">Add Requirement</h5>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>Crop Name</label>\r\n                        <Input\r\n                          placeholder=\"Crop Name\"\r\n                          type=\"text\"\r\n                          value={this.state.crop_name}\r\n                          onChange={this.updateCropName}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>Quantity</label>\r\n                        <Input\r\n                          placeholder=\"Quantity\"\r\n                          type=\"number\"\r\n                          value={this.state.quantity_in_kg}\r\n                          onChange={this.updateQuantity}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>Price per Kg.</label>\r\n                        <Input\r\n                          placeholder=\"Price per Kg.\"\r\n                          type=\"number\"\r\n                          value={this.state.price_per_kg}\r\n                          onChange={this.updatePrice}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>Delivery Time</label>\r\n                        <Input\r\n                          placeholder=\"Delivery Time\"\r\n                          type=\"number\"\r\n                          value={this.state.deliveryTime}\r\n                          onChange={this.updateDelTime}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>Total Amount</label>\r\n                        <Input\r\n                          placeholder=\"Total Amount\"\r\n                          type=\"number\"\r\n                          value={this.state._total}\r\n                          onChange={this.updateTotal}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>Advanced Payment</label>\r\n                        <Input\r\n                          placeholder=\"Advanced Payment\"\r\n                          type=\"number\"\r\n                          value={this.state._advPayment}\r\n                          onChange={this.updateAdvanced}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button className=\"btn-fill\" color=\"primary\" onClick={this.AddRequirement}>\r\n                  Add Requirement\r\n                </Button>\r\n              </CardFooter>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default AddRequirement;\r\n","import {\n    LoadingContainer\n} from '@drizzle/react-components';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n// reactstrap components\nimport {\n    Button, Card, CardBody, CardHeader, CardTitle, Table\n} from \"reactstrap\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Farm from \"../artifacts/Farm.json\";\nimport getWeb3 from \"../getWeb3\";\nimport '../index.css';\n\nconst drizzleOptions = {\n    contracts: [Farm]\n}\n\nclass ApproveRequest extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            FarmInstance: undefined,\n            account: null,\n            web3: null,\n            approved: '',\n            flag: null,\n            verified: '',\n            registered: '',\n            count: 0,\n            id: '',\n            row: [],\n            val: 0,\n        }\n    }\n    approveRequest = (farmer_Id, reqId, adv_Payment) => async () => {\n        // this.state.val = adv_Payment;\n        this.setState({val : adv_Payment});\n        await this.state.FarmInstance.methods.signContract(\n            farmer_Id, reqId\n        ).send({\n            from: this.state.account,\n            gas: 2100000,\n            value: this.state.val\n        });\n        //Reload\n        window.location.reload(false);\n\n    }\n\n    rejectRequest = (reqId) => async () => {\n\n        await this.state.FarmInstance.methods.approveRequest(\n            reqId\n        ).send({\n            from: this.state.account,\n            gas: 2100000,\n            value: this.state.value\n        });\n        //Reload\n        window.location.reload(false);\n\n    }\n\n    getRequirement = (reqId) => async () => {\n\n        await this.state.FarmInstance.methods.getCropRequirementCropName(\n            reqId\n        ).send({\n            from: this.state.account,\n            gas: 2100000\n        });\n        //Reload\n        window.location.reload(false);\n\n    }\n\n    getFarmer = (address) => async () => {\n        await this.state.FarmInstance.methods.getFarmerDetails(address).send({\n            from: this.state.account,\n            gas: 2100000,\n\n        })\n    }\n\n    componentDidMount = async () => {\n        //For refreshing page only once\n        if (!window.location.hash) {\n            window.location = window.location + '#loaded';\n            window.location.reload();\n        }\n\n        try {\n            //Get network provider and web3 instance\n            const web3 = await getWeb3();\n            const accounts = await web3.eth.getAccounts();\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = Farm.networks[networkId];\n            const instance = new web3.eth.Contract(\n                Farm.abi,\n                deployedNetwork && deployedNetwork.address,\n            );\n\n            const currentAddress = await web3.currentProvider.selectedAddress;\n            this.setState({ FarmInstance: instance, web3: web3, account: accounts[0] });\n\n            var registered = await this.state.FarmInstance.methods.isBusiness(currentAddress).call();\n            this.setState({ registered: registered });\n\n            var count = await this.state.FarmInstance.methods.getCropReqCount().call();\n            this.setState({ count: parseInt(count) });\n\n            // var requestsCount = await this.state.FarmInstance.methods.getRequestsCount().call();\n            // console.log(requestsCount);\n            const row = [];\n            var ind = 0;\n            for (let i = 0; i < count; i++) {\n                ind++;\n                const businessId = await this.state.FarmInstance.methods.getCropRequirementBusiness(i).call();\n                const status = await this.state.FarmInstance.methods.getCropRequirementStatus(i).call();\n                const isRequested = await this.state.FarmInstance.methods.isRequested(i).call();\n\n                if (businessId.toLowerCase() === currentAddress.toLowerCase() && !status && isRequested) {\n                    const farmerId = await this.state.FarmInstance.methods.requestMapping(i).call();\n                    const farmerDetails = await this.state.FarmInstance.methods.getFarmerDetails(farmerId).call();\n                    // const deliveryTime = await this.state.FarmInstance.methods.getCropRequirementDelTime(i).call();\n                    // const totalPrice = await this.state.FarmInstance.methods.getCropRequirementTotalPrice(i).call();\n                    const advPayment = await this.state.FarmInstance.methods.getCropRequirementAdvPayment(i).call();\n                    row.push(\n                    <tr key={i}>\n                        <td>\n                            {ind}\n                        </td>\n                        <td>\n                            <tr>\n                                Crop name: {await this.state.FarmInstance.methods.getCropRequirementCropName(i).call()}\n                            </tr>\n                            <tr>\n                                Quantity: {await this.state.FarmInstance.methods.getCropRequirementQuantity(i).call()} kg\n                            </tr>\n                            <tr>\n                                Price/kg: {await this.state.FarmInstance.methods.getCropRequirementPrice(i).call()}\n                            </tr>\n                            <tr>\n                                Delivery Time: {await this.state.FarmInstance.methods.getCropRequirementDelTime(i).call()}\n                            </tr>\n                            <tr>\n                                Total Price: {await this.state.FarmInstance.methods.getCropRequirementTotalPrice(i).call()}                            \n                            </tr>\n                            <tr>\n                                Adv. Payment: {advPayment}                            \n                            </tr>\n                        </td>\n\n                        <td>\n                            <tr>\n                                Name: {farmerDetails[0]}\n                            </tr>\n                            <tr>\n                                Age: {farmerDetails[1]}\n                            </tr>\n                            <tr>\n                                city: {farmerDetails[2]}\n                            </tr>\n                            <tr>\n                                Adhar: {farmerDetails[3]}\n                            </tr>\n                            <tr>\n                                Pan: {farmerDetails[4]}\n                            </tr>\n                            <tr>\n                                <a href={`http://127.0.0.1:8080/ipfs/${farmerDetails[5]}`} target=\"_blank\" rel=\"noreferrer\">Land Doc</a>\n                            </tr>\n                        </td>\n                        <td>\n                            <Button onClick={this.approveRequest(farmerId, i, advPayment)} className=\"btn btn-danger\">\n                                Approve\n                            </Button>\n                            <a href=\"/ApproveRequest.js\"> </a>\n                            <Button onClick={this.rejectRequest(i)} className=\"btn btn-danger\">\n                                Reject\n                            </Button>\n                        </td>\n                    </tr>);\n                }\n            }\n            this.setState({ row: row });\n            // console.log(requestTable);\n\n        } catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n                `Failed to load web3, accounts, or contract. Check console for details.`,\n            );\n            console.error(error);\n        }\n    };\n\n    render() {\n        if (!this.state.web3) {\n            return (\n                <div>\n                    <div>\n                        <h1>\n                            <Spinner animation=\"border\" variant=\"primary\" />\n                        </h1>\n                    </div>\n\n                </div>\n            );\n        }\n\n        if (!this.state.registered) {\n            return (\n                <div className=\"content\">\n                    <div>\n                        <h1>\n                            You are not authorized to view this page.\n                        </h1>\n                    </div>\n\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"content\">\n                <DrizzleProvider options={drizzleOptions}>\n                    <LoadingContainer>\n                        <Card>\n                            <CardHeader>\n                                <CardTitle tag=\"h4\">Requests Info</CardTitle>\n                            </CardHeader>\n                            <CardBody>\n\n                                <Table className=\"tablesorter\" responsive color=\"black\">\n                                    <thead className=\"text-primary\">\n                                        <tr>\n                                            <th>#</th>\n                                            <th>Crop Requirements</th>\n                                            <th>Farmer ID</th>\n                                            <th>Approve Request</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.state.row}\n                                    </tbody>\n                                </Table>\n                            </CardBody>\n                        </Card>\n\n                    </LoadingContainer>\n                </DrizzleProvider>\n            </div>\n        );\n\n    }\n}\n\nexport default ApproveRequest;\n","import BusinessDashboard from \"./views/BusinessDashboard\";\nimport AddRequirement from \"./views/AddRequirement\";\nimport ApproveRequest from \"./views/ApproveRequest\";\nimport BusinessProfile from \"./views/BusinessProfile\";\nimport ContractInfoBusiness from \"./views/ContractInfoBusiness\";\nimport updateBusiness from \"./views/updateBusiness\";\nimport Help from \"./Help\";\n\nvar routes = [\n  {\n    path: \"/BusinessDashboard\",\n    name: \"BusinessDashboard\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    component: BusinessDashboard,\n    layout: \"/Business\",\n  },\n  {\n    path: \"/AddRequirement\",\n    name: \"Add Requirement\",\n    rtlName: \"الرموز\",\n    icon: \"tim-icons icon-world\",\n    component: AddRequirement,\n    layout: \"/Business\",\n  },\n  {\n    path: \"/BusinessProfile\",\n    name: \"Business Profile\",\n    rtlName: \"الرموز\",\n    icon: \"tim-icons icon-single-02\",\n    component: BusinessProfile,\n    layout: \"/Business\",\n  },\n  {\n    path: \"/ApproveRequest\",\n    name: \"Approve Request\",\n    rtlName: \"الرموز\",\n    icon: \"tim-icons icon-badge\",\n    component: ApproveRequest,\n    layout: \"/Business\",\n  },\n  {\n    path: \"/ContractInfoBusiness\",\n    name: \"Contracts Info\",\n    rtlName: \"الرموز\",\n    icon: \"tim-icons icon-image-02\",\n    component: ContractInfoBusiness,\n    layout: \"/Business\",\n  },\n  {\n    path: \"/Help\",\n    name: \"Help\",\n    rtlName: \"الرموز\",\n    icon: \"tim-icons icon-image-02\",\n    component: Help,\n    layout: \"/Business\",\n  },\n  {\n    path: \"/updateBusiness\",\n    name: \"Update Business\",\n    rtlName: \"الرموز\",\n    icon: \"tim-icons\",\n    component: updateBusiness,\n    layout: \"/Business\",\n  },\n];\nexport default routes;","import { createContext } from \"react\";\n\nexport const themes = {\n  dark: \"\",\n  light: \"white-content\",\n};\n\nexport const ThemeContext = createContext({\n  theme: themes.light,\n  changeTheme: () => {},\n});\n","import React, { useState, useEffect } from \"react\";\nimport { ThemeContext, themes } from \"../../contexts/ThemeContext\";\n\nexport default function ThemeContextWrapper(props) {\n  const [theme, setTheme] = useState(themes.light);\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(() => {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add(\"white-content\");\n        break;\n      case themes.dark:\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  BackgroundColorContext,\n  backgroundColors,\n} from \"../../contexts/BackgroundColorContext\";\n\nexport default function BackgroundColorWrapper(props) {\n  const [color, setColor] = useState(backgroundColors.blue);\n\n  function changeColor(color) {\n    setColor(color);\n  }\n\n  return (\n    <BackgroundColorContext.Provider\n      value={{ color: color, changeColor: changeColor }}\n    >\n      {props.children}\n    </BackgroundColorContext.Provider>\n  );\n}\n","import React from 'react';\nimport Login from \"./login.component\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport history from './history';\nimport RegisterBusiness from \"./RegisterBusiness\";\nimport RegisterFarmer from \"./RegisterFarmer\";\nimport AdminLayout from \"./layouts/Admin/Admin\";\nimport Admin1 from \"./layouts/Admin/Admin1\";\nimport Business from \"./layouts/Admin/Business\";\nimport \"./assets/scss/black-dashboard-react.scss\";\nimport \"./assets/demo/demo.css\";\nimport \"./assets/css/nucleo-icons.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport ThemeContextWrapper from \"./components/ThemeWrapper/ThemeWrapper\";\nimport BackgroundColorWrapper from \"./components/BackgroundColorWrapper/BackgroundColorWrapper\";\nimport Help from './Help';\n\nReactDOM.render(\n  <ThemeContextWrapper>\n    <BackgroundColorWrapper>\n      <Router history={history}>\n        <Switch>\n          <Route exact path='/' component={Login} />\n          <Route path=\"/RegisterBusiness\" component={RegisterBusiness} />\n          <Route path=\"/RegisterFarmer\" component={RegisterFarmer} />\n          <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\n          <Route path=\"/Admin1\" render={(props) => <Admin1 {...props} />} />\n          <Route path=\"/Business\" render={(props) => <Business {...props} />} />\n          <Route exact path='/Help' component={Help} /> \n        </Switch>\n      </Router>\n    </BackgroundColorWrapper>\n  </ThemeContextWrapper>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}